var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/components/Alert.html",[0,0.561,1,0.749]],["body/components/Alert.html",[0,0.496,1,1.286,2,0.864,3,0.709,4,0.484,5,0.484,6,1.299,7,0.818,8,1.12,9,1.28,10,2.521,11,1.472,12,1.635,13,0.423,14,0.422,15,3.078,16,2.506,17,3.078,18,2.506,19,2.363,20,2.506,21,2.228,22,3.107,23,2.506,24,2.228,25,1.12,26,2.835,27,3.516,28,1.785,29,2.12,30,1.61,31,1.212,32,0.052,33,1.712,34,1.61,35,1.61,36,0.632,37,1.217,38,1.063,39,2.055,40,2.286,41,2.455,42,1.61,43,2.556,44,2.835,45,1.61,46,2.033,47,2.11,48,1.212,49,1.61,50,1.472,51,1.562,52,1.12,53,1.61,54,2.033,55,0.691,56,2.033,57,1.61,58,2.033,59,1.472,60,0.662,61,1.61,62,0.864,63,1.472,64,1.472,65,1.472,66,1.472,67,1.472,68,1.472,69,1.472,70,1.472,71,1.472,72,2.835,73,2.11,74,1.61,75,2.521,76,2.11,77,1.61,78,0.758,79,1.61,80,0.984,81,0.818,82,0.94,83,0.818,84,0.818,85,0.716,86,0.818,87,1.712,88,1.61,89,1.61,90,1.61,91,1.61,92,1.578,93,1.61,94,1.61,95,1.61,96,1.61,97,1.61,98,1.61,99,1.61,100,1.61,101,1.61,102,1.61,103,1.562,104,0.818,105,0.924,106,1.938,107,0.317,108,0.423,109,0.367,110,0.484,111,0.818,112,0.818,113,0.015,114,0.023,115,0.015]],["title/components/Badge.html",[0,0.561,107,0.561]],["body/components/Badge.html",[0,0.68,1,0.646,2,1.185,3,0.912,4,0.74,5,0.74,7,1.249,8,1.536,9,1.755,11,2.018,12,1.485,13,0.646,14,0.579,19,2.529,21,2.665,24,2.665,25,1.536,28,2.2,29,1.926,31,0.96,32,0.051,36,0.561,37,1.039,38,0.646,39,1.249,40,2.028,41,2.468,55,0.852,60,1.199,62,1.185,63,2.018,64,2.018,65,2.018,66,2.018,67,2.018,68,2.018,69,2.018,70,2.018,71,2.018,78,1.039,80,1.349,81,1.249,82,1.437,83,1.249,84,1.249,85,1.094,86,1.249,92,1.249,103,1.926,104,1.249,105,1.08,106,2.318,107,1.005,108,0.646,109,0.562,110,0.74,111,1.249,112,1.249,113,0.022,114,0.032,115,0.022,116,1.985,117,3.457,118,2.461,119,2.461,120,2.461,121,2.461,122,1.536,123,2.461]],["title/interfaces/ILabelTo.html",[124,1.113,125,1.268]],["body/interfaces/ILabelTo.html",[3,0.852,4,1.122,5,1.122,13,0.981,14,0.761,32,0.05,36,0.638,51,1.659,55,1.058,105,0.852,113,0.034,114,0.042,115,0.034,124,1.773,125,2.02,126,2.18,127,2.535,128,2.976,129,2.588,130,1.659,131,2.535]],["title/interfaces/ISelectItem.html",[124,1.113,130,1.268]],["body/interfaces/ISelectItem.html",[3,0.852,4,1.122,5,1.122,13,0.981,14,0.761,32,0.05,36,0.638,51,2.177,55,1.027,105,1.163,113,0.034,114,0.042,115,0.034,124,1.773,125,1.659,126,2.18,127,2.535,128,2.18,129,1.896,130,2.02,131,3.462]],["title/interfaces/IToggleOptions.html",[124,1.113,132,1.449]],["body/interfaces/IToggleOptions.html",[3,0.819,4,1.079,5,1.079,13,0.943,14,0.743,32,0.049,36,0.706,55,1.086,85,1.595,113,0.033,114,0.041,115,0.033,124,1.401,126,2.096,132,2.252,133,2.895,134,3.415,135,3.415,136,3.415,137,3.415]],["title/components/Modal.html",[0,0.561,108,0.749]],["body/components/Modal.html",[0,0.565,1,0.502,2,0.985,3,0.436,4,0.574,5,0.574,7,0.97,8,1.278,9,1.46,11,1.678,12,1.737,13,0.502,14,0.481,25,1.278,28,1.952,29,1.926,31,0.745,32,0.052,36,0.579,37,1.156,38,1.083,39,2.094,40,2.094,41,2.403,47,2.347,48,1.349,55,0.852,59,2.245,60,1.01,78,1.351,80,1.122,81,0.97,83,0.97,84,0.97,85,0.849,86,0.97,87,2.8,92,0.97,103,1.709,104,0.97,105,0.989,106,2.094,107,0.376,108,1.331,109,0.436,110,0.574,111,0.97,112,0.97,113,0.017,114,0.026,115,0.017,122,1.926,138,1.541,139,2.875,140,2.788,141,4.333,142,2.788,143,2.788,144,2.788,145,3.326,146,1.911,147,3.326,148,1.911,149,2.875,150,3.846,151,1.911,152,1.678,153,2.319,154,3.101,155,1.911,156,3.101,157,1.911,158,1.911,159,1.297,160,2.875,161,1.911,162,3.457,163,1.911,164,1.911,165,1.911,166,1.911,167,1.911,168,1.911,169,1.911]],["title/components/Multiselect.html",[0,0.561,109,0.651]],["body/components/Multiselect.html",[0,0.291,1,0.223,2,0.508,3,0.194,4,0.255,5,0.255,7,0.431,8,0.658,9,0.752,11,0.865,12,1.085,13,0.223,14,0.248,19,1.15,23,1.195,25,0.658,28,1.198,29,2.058,31,1.148,32,0.052,33,1.602,36,0.606,37,0.884,38,1.052,39,2.034,40,2.255,41,2.306,47,1.338,48,0.921,50,0.865,51,1.19,52,0.658,55,0.721,60,0.389,62,1.008,72,2.373,73,2.575,76,1.006,78,0.951,81,0.431,82,0.496,83,0.431,84,0.431,85,0.377,86,0.431,87,2.391,92,1.704,103,1.049,104,0.431,105,0.803,106,1.36,107,0.167,108,0.223,109,0.722,110,0.255,111,0.431,112,0.431,113,0.008,114,0.014,115,0.008,122,1.049,125,0.658,128,1.717,129,1.704,130,1.997,152,0.865,170,0.685,171,1.481,172,1.97,173,1.481,174,1.589,175,1.97,176,3.485,177,1.97,178,1.589,179,1.589,180,2.553,181,2.16,182,1.589,183,1.589,184,3.85,185,1.589,186,1.589,187,1.97,188,1.97,189,2.36,190,1.903,191,1.481,192,1.481,193,1.481,194,0.849,195,1.97,196,0.849,197,1.195,198,1.481,199,1.97,200,1.481,201,1.481,202,1.481,203,0.849,204,1.589,205,0.849,206,1.481,207,3.356,208,1.481,209,0.849,210,2.678,211,1.481,212,1.481,213,0.849,214,0.849,215,1.195,216,1.195,217,0.849,218,0.849,219,1.195,220,0.849,221,1.195,222,0.849,223,2.553,224,1.195,225,1.903,226,0.849,227,0.849,228,1.195,229,1.195,230,1.195,231,1.602,232,0.849,233,1.195,234,1.195,235,1.195,236,1.195,237,1.195,238,0.849,239,1.195,240,1.195,241,0.849,242,0.849,243,0.849,244,1.195,245,0.849,246,1.195,247,0.849,248,2.678,249,0.849,250,0.849,251,0.849,252,1.589,253,0.685,254,0.849,255,1.97,256,3.165,257,3.666,258,1.481,259,1.481,260,1.97,261,1.481,262,0.849,263,0.849,264,0.849,265,0.849,266,0.849,267,0.849,268,0.849,269,0.849,270,3.356,271,0.849,272,0.849,273,1.195,274,0.849,275,0.576,276,1.481,277,3.356,278,0.849,279,0.849,280,0.849,281,0.849,282,2.373,283,1.97,284,1.97,285,1.481,286,0.849,287,2.36,288,0.849,289,1.481,290,1.481,291,0.849,292,0.849,293,0.849,294,0.849,295,0.849,296,0.849,297,1.481,298,0.849,299,0.849,300,1.481,301,0.849,302,0.849,303,0.849,304,0.849,305,0.576,306,0.849,307,0.849,308,0.849,309,0.849,310,0.849,311,0.849,312,0.849,313,0.849,314,0.849,315,0.849,316,0.849,317,0.849,318,0.849,319,0.849,320,0.849]],["title/components/Readmore.html",[0,0.561,110,0.858]],["body/components/Readmore.html",[0,0.638,1,0.591,2,1.112,3,0.513,4,0.676,5,0.676,7,1.142,8,1.441,9,1.647,13,0.591,14,0.543,25,1.441,26,3.356,28,2.113,29,2.042,31,1.624,32,0.052,33,2.202,36,0.455,37,0.975,38,0.591,39,1.142,40,1.647,41,1.931,43,1.893,60,0.852,62,1.112,73,2.582,78,0.676,81,1.647,82,1.314,83,1.142,84,1.142,85,1,86,1.142,92,2.113,103,1.849,104,1.142,105,1.049,106,2.24,107,0.442,108,0.591,109,0.513,110,1.381,111,1.142,112,1.142,113,0.021,114,0.03,115,0.021,132,1.931,134,2.202,135,2.202,136,2.202,137,2.202,275,3.12,321,1.815,322,3.243,323,3.803,324,3.067,325,4.162,326,2.25,327,2.25,328,2.25,329,4.596,330,2.582,331,3.803,332,2.429,333,2.25,334,2.25,335,2.202,336,2.25,337,2.616,338,2.25,339,4.162,340,3.243,341,2.25,342,2.25,343,2.25]],["title/contributing.html",[344,1.641,345,1.641,346,1.641]],["body/contributing.html",[2,1.391,32,0.041,80,1.217,113,0.028,114,0.037,115,0.028,159,2.118,346,2.118,347,3.12,348,4.059,349,3.12,350,3.12,351,3.12,352,3.12,353,3.12,354,3.12,355,4.953,356,4.059,357,4.778,358,3.12,359,3.12,360,3.994,361,3.12,362,4.059,363,3.638,364,3.638,365,4.778,366,3.273,367,3.12,368,3.12,369,3.12,370,4.512,371,4.778,372,4.512,373,3.12,374,4.059,375,3.12,376,3.12,377,3.12,378,3.12,379,3.12,380,3.12,381,3.12,382,3.12,383,3.12,384,3.12,385,3.12,386,3.12,387,3.12,388,2.516,389,3.12,390,3.12,391,3.12,392,4.059,393,3.12,394,3.12,395,3.12,396,3.12,397,2.516,398,2.516,399,3.12,400,1.387,401,3.12,402,3.12]],["title/coverage.html",[403,3.086]],["body/coverage.html",[0,1.003,1,0.902,5,1.032,6,2.769,32,0.05,36,0.482,107,0.675,108,0.902,109,0.784,110,1.032,113,0.031,114,0.039,115,0.031,116,2.769,124,1.841,125,1.526,127,2.93,130,1.526,132,1.743,133,2.769,138,2.769,170,2.769,231,2.331,282,3.993,321,2.769,360,2.769,403,2.769,404,2.331,405,3.434,406,3.434,407,3.434,408,3.434,409,3.434,410,3.434,411,3.434,412,3.434,413,4.315,414,3.434,415,3.434,416,3.434,417,3.434,418,3.434,419,2.769,420,2.769,421,3.434,422,3.434,423,2.769]],["title/miscellaneous/functions.html",[424,1.949,425,2.753]],["body/miscellaneous/functions.html",[13,1.054,19,2.342,31,1.565,32,0.048,55,0.789,105,0.915,113,0.037,114,0.043,115,0.037,204,3.235,419,3.235,420,3.826,424,3.235,425,3.235,426,4.012,427,4.012,428,4.745,429,4.745,430,4.012]],["title/index.html",[13,0.635,344,1.641,345,1.641]],["body/index.html",[0,0.778,1,0.788,2,1.356,3,0.685,4,0.902,8,1.758,32,0.049,52,1.758,76,2.038,103,1.758,105,1.01,107,0.778,108,0.788,109,0.903,110,0.902,113,0.027,114,0.036,115,0.027,129,1.524,131,3.006,273,3.191,335,2.038,346,2.038,363,2.42,364,3.191,388,4.131,397,2.42,398,3.191,404,2.038,423,2.42,431,3.001,432,2.038,433,1.334,434,3.001,435,3.957,436,3.001,437,3.001,438,3.001,439,3.957,440,3.957,441,3.001,442,3.001,443,3.001,444,3.001,445,3.001,446,3.957,447,3.001,448,3.001,449,3.001,450,3.001,451,2.42,452,3.001,453,3.001,454,3.001,455,3.001,456,3.001,457,3.001,458,4.892,459,3.957,460,3.001,461,3.001,462,3.001,463,3.001,464,3.001,465,3.001,466,3.001,467,3.001,468,3.001,469,3.001,470,3.001,471,3.001,472,3.001]],["title/license.html",[344,1.641,345,1.641,473,1.949]],["body/license.html",[32,0.037,48,1.225,113,0.029,114,0.037,115,0.029,366,2.532,404,2.131,451,3.286,473,2.532,474,3.139,475,4.525,476,3.139,477,3.139,478,4.075,479,3.139,480,3.139,481,3.139,482,3.139,483,3.139,484,3.139,485,4.075,486,5.305,487,3.139,488,3.139,489,4.525,490,3.139,491,4.075,492,3.139,493,3.139,494,3.139,495,3.139,496,3.139,497,3.139,498,3.139,499,3.139,500,3.139,501,4.075,502,3.139,503,3.139,504,3.139,505,3.139,506,3.139,507,3.139,508,3.139,509,4.075,510,4.075,511,3.139,512,3.139,513,3.139,514,3.139,515,3.139,516,3.139,517,3.139,518,3.139,519,3.139,520,3.139,521,3.139,522,3.139,523,3.139,524,3.139,525,3.139,526,3.139,527,3.139,528,3.139,529,3.139,530,3.139,531,3.139,532,3.139,533,3.139,534,3.139,535,3.139,536,3.139,537,3.139,538,3.139,539,3.139,540,3.139]],["title/modules.html",[541,3.086]],["body/modules.html",[32,0.045,113,0.04,114,0.045,115,0.04,541,3.495]],["title/overview.html",[542,3.086]],["body/overview.html",[2,1.461,32,0.045,52,1.894,113,0.039,114,0.045,115,0.039,126,2.488,542,3.437,543,4.262]],["title/additional-documentation/is-alert.html",[1,0.635,544,1.227,545,1.227]],["body/additional-documentation/is-alert.html",[1,1.414,3,0.631,12,1.631,14,0.627,15,3.022,16,3.022,17,3.022,18,2.231,20,2.231,21,2.929,24,2.659,32,0.034,36,0.526,37,1.277,38,0.727,43,2.864,44,3.022,46,2.231,48,1.079,50,1.615,51,1.665,52,1.229,54,2.231,55,0.737,56,2.231,58,2.231,59,1.615,60,1.289,62,0.948,63,1.615,64,1.615,65,1.615,66,1.615,67,1.615,68,1.615,69,1.615,70,1.615,71,1.615,78,0.832,80,1.079,105,0.631,107,0.544,113,0.025,114,0.034,115,0.025,330,2.544,332,2.187,400,1.229,432,2.544,433,1.229,546,1.404,547,2.157,548,2.767,549,2.767,550,1.878,551,1.878,552,1.878,553,2.231,554,2.231,555,3.022,556,3.022,557,3.022,558,3.957,559,3.022,560,3.022,561,3.022,562,4.117,563,3.022,564,1.404]],["title/additional-documentation/is-badge.html",[107,0.475,544,1.227,545,1.227]],["body/additional-documentation/is-badge.html",[3,0.669,12,1.005,14,0.652,21,2.973,24,2.722,32,0.04,36,0.412,37,0.882,38,0.77,55,0.766,60,1.338,62,1.005,63,1.712,64,1.712,65,1.712,66,1.712,67,1.712,68,1.712,69,1.712,70,1.712,71,1.712,78,0.882,80,1.144,105,0.669,107,1.075,109,0.889,113,0.027,114,0.036,115,0.027,122,1.303,305,1.991,330,2.646,332,2.275,400,1.303,432,2.646,433,1.303,546,1.489,547,1.978,550,2.646,553,2.365,554,2.365,555,3.143,556,3.143,557,3.143,558,4.025,559,3.143,560,3.143,561,3.143,562,4.171,563,3.143,564,1.489,565,3.897,566,2.365,567,2.933,568,3.143,569,2.365,570,2.365,571,2.365]],["title/additional-documentation/is-modal.html",[108,0.635,544,1.227,545,1.227]],["body/additional-documentation/is-modal.html",[12,1.485,14,0.579,32,0.04,36,0.608,37,1.303,38,0.908,48,1.349,55,0.931,59,2.53,60,1.303,78,1.303,80,1.349,108,1.39,113,0.032,114,0.04,115,0.032,122,2.104,140,2.788,142,2.788,143,2.788,144,2.788,145,3.817,147,4.002,152,2.018,153,3.495,154,3.817,156,3.817,159,2.347,400,1.536,433,1.536,546,1.755,547,2.2,551,2.347,552,2.942,564,1.755]],["title/additional-documentation/is-multiselect.html",[109,0.552,544,1.227,545,1.227]],["body/additional-documentation/is-multiselect.html",[12,1.27,14,0.456,25,1.21,29,1.21,31,1.062,32,0.049,36,0.592,37,1.114,38,0.715,48,1.062,50,1.589,51,1.873,52,1.21,55,0.829,60,0.715,62,1.27,78,1.114,107,0.829,109,0.962,113,0.025,114,0.034,115,0.025,122,1.647,125,1.21,128,2.46,129,2.297,130,1.647,152,2.164,174,2.989,176,4.101,178,2.195,179,2.195,180,3.649,181,2.989,182,2.989,183,2.989,184,4.307,185,2.195,186,2.195,190,2.195,197,2.989,215,2.195,216,2.195,219,2.195,221,2.195,223,3.399,224,2.195,225,2.989,228,2.195,229,2.195,230,2.195,231,2.517,233,2.195,234,2.195,235,2.195,236,2.195,237,2.195,239,2.195,240,2.195,244,2.195,246,2.195,252,2.989,253,2.195,305,1.848,400,1.21,433,1.21,546,1.382,547,1.882,550,1.848,551,1.848,552,1.848,564,1.382,566,2.195,568,2.989,569,2.195,570,2.195,571,2.195,572,2.722]],["title/additional-documentation/is-readmore.html",[110,0.727,544,1.227,545,1.227]],["body/additional-documentation/is-readmore.html",[14,0.659,32,0.048,36,0.552,38,1.033,43,2.297,60,1.033,62,1.348,113,0.036,114,0.043,115,0.036,132,1.998,134,2.671,135,2.671,136,2.671,137,2.671,275,2.671,324,3.173,332,2.297,335,2.671,337,3.173,400,1.748,433,1.748,546,1.998,547,1.998,564,1.998,573,3.935]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["0",{"_index":282,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["0/1",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":273,"title":{},"body":{"components/Multiselect.html":{},"index.html":{}}}],["1/7",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":99,"title":{},"body":{"components/Alert.html":{}}}],["12/22",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":459,"title":{},"body":{"index.html":{}}}],["200",{"_index":280,"title":{},"body":{"components/Multiselect.html":{}}}],["2018",{"_index":477,"title":{},"body":{"license.html":{}}}],["3",{"_index":52,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"index.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["3/5",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":543,"title":{},"body":{"overview.html":{}}}],["5/7",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["7/13",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":508,"title":{},"body":{"license.html":{}}}],["accidentally",{"_index":380,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":533,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":112,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["add",{"_index":371,"title":{},"body":{"contributing.html":{}}}],["additional",{"_index":544,"title":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}},"body":{}}],["again",{"_index":384,"title":{},"body":{"contributing.html":{}}}],["alert",{"_index":1,"title":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-alert.html":{}}}],["alert.scss",{"_index":10,"title":{},"body":{"components/Alert.html":{}}}],["align",{"_index":329,"title":{},"body":{"components/Readmore.html":{}}}],["and/or",{"_index":499,"title":{},"body":{"license.html":{}}}],["another",{"_index":467,"title":{},"body":{"index.html":{}}}],["anywhere",{"_index":452,"title":{},"body":{"index.html":{}}}],["applications",{"_index":431,"title":{},"body":{"index.html":{}}}],["arising",{"_index":537,"title":{},"body":{"license.html":{}}}],["associated",{"_index":487,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":400,"title":{},"body":{"contributing.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["authors",{"_index":526,"title":{},"body":{"license.html":{}}}],["auto",{"_index":548,"title":{},"body":{"additional-documentation/is-alert.html":{}}}],["autoclose",{"_index":15,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["automatically",{"_index":44,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["awesome",{"_index":362,"title":{},"body":{"contributing.html":{}}}],["b",{"_index":359,"title":{},"body":{"contributing.html":{}}}],["background",{"_index":555,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["badge",{"_index":107,"title":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["badge.scss",{"_index":117,"title":{},"body":{"components/Badge.html":{}}}],["badges",{"_index":246,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["before",{"_index":382,"title":{},"body":{"contributing.html":{}}}],["beside",{"_index":367,"title":{},"body":{"contributing.html":{}}}],["black",{"_index":70,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["boolean",{"_index":37,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{}}}],["border",{"_index":556,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["bottom",{"_index":563,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["branch",{"_index":356,"title":{},"body":{"contributing.html":{}}}],["browse",{"_index":385,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":363,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["building",{"_index":397,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["building_construction",{"_index":396,"title":{},"body":{"contributing.html":{}}}],["built",{"_index":564,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["button",{"_index":59,"title":{},"body":{"components/Alert.html":{},"components/Modal.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-modal.html":{}}}],["c",{"_index":476,"title":{},"body":{"license.html":{}}}],["cancel",{"_index":147,"title":{},"body":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}}}],["canceltext",{"_index":140,"title":{},"body":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}}}],["cdn",{"_index":443,"title":{},"body":{"index.html":{}}}],["center",{"_index":331,"title":{},"body":{"components/Readmore.html":{}}}],["changed",{"_index":244,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["changes",{"_index":370,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":482,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":358,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":529,"title":{},"body":{"license.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["click",{"_index":225,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["clone",{"_index":350,"title":{},"body":{"contributing.html":{}}}],["closable",{"_index":46,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["close",{"_index":43,"title":{},"body":{"components/Alert.html":{},"components/Readmore.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-readmore.html":{}}}],["closeable",{"_index":16,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closed",{"_index":17,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closesecs",{"_index":18,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closetext",{"_index":20,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["code",{"_index":462,"title":{},"body":{"index.html":{}}}],["color",{"_index":21,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["commit",{"_index":372,"title":{},"body":{"contributing.html":{}}}],["committing",{"_index":383,"title":{},"body":{"contributing.html":{}}}],["component",{"_index":0,"title":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"coverage.html":{},"index.html":{}}}],["component.isnur.com",{"_index":436,"title":{},"body":{"index.html":{}}}],["component.isnur.com/docs",{"_index":437,"title":{},"body":{"index.html":{}}}],["component/issues",{"_index":389,"title":{},"body":{"contributing.html":{}}}],["component_template",{"_index":104,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["componentdidload",{"_index":26,"title":{},"body":{"components/Alert.html":{},"components/Readmore.html":{}}}],["componentdidunload",{"_index":27,"title":{},"body":{"components/Alert.html":{}}}],["componentinterface",{"_index":172,"title":{},"body":{"components/Multiselect.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"contributing.html":{},"index.html":{},"overview.html":{}}}],["componentusage",{"_index":445,"title":{},"body":{"index.html":{}}}],["componentwillload",{"_index":189,"title":{},"body":{"components/Multiselect.html":{}}}],["conditions",{"_index":507,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":463,"title":{},"body":{"index.html":{}}}],["config",{"_index":337,"title":{},"body":{"components/Readmore.html":{},"additional-documentation/is-readmore.html":{}}}],["connection",{"_index":539,"title":{},"body":{"license.html":{}}}],["const",{"_index":260,"title":{},"body":{"components/Multiselect.html":{}}}],["contentexpanded",{"_index":323,"title":{},"body":{"components/Readmore.html":{}}}],["contract",{"_index":534,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":470,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":346,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contributing.md",{"_index":469,"title":{},"body":{"index.html":{}}}],["copies",{"_index":501,"title":{},"body":{"license.html":{}}}],["copy",{"_index":485,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":475,"title":{},"body":{"license.html":{}}}],["count",{"_index":252,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["countdowntimerid",{"_index":22,"title":{},"body":{"components/Alert.html":{}}}],["coverage",{"_index":403,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":354,"title":{},"body":{"contributing.html":{}}}],["css",{"_index":553,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["custom",{"_index":554,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["customevent",{"_index":552,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{}}}],["customized",{"_index":58,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["damages",{"_index":530,"title":{},"body":{"license.html":{}}}],["dark",{"_index":71,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["data",{"_index":458,"title":{},"body":{"index.html":{}}}],["deal",{"_index":488,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":540,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":40,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["default",{"_index":38,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"additional-documentation/is-multiselect.html":{}}}],["demo",{"_index":434,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":566,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["depends",{"_index":572,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["description",{"_index":547,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["develop",{"_index":361,"title":{},"body":{"contributing.html":{}}}],["directives",{"_index":111,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["disabled",{"_index":174,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["display",{"_index":122,"title":{},"body":{"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{}}}],["dist",{"_index":393,"title":{},"body":{"contributing.html":{}}}],["distribute",{"_index":497,"title":{},"body":{"license.html":{}}}],["document",{"_index":202,"title":{},"body":{"components/Multiselect.html":{}}}],["document.getelementbyid(\"select",{"_index":457,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":404,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["don't",{"_index":391,"title":{},"body":{"contributing.html":{}}}],["each",{"_index":401,"title":{},"body":{"contributing.html":{}}}],["edit",{"_index":392,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":23,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["element",{"_index":76,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"index.html":{}}}],["element.value",{"_index":299,"title":{},"body":{"components/Multiselect.html":{}}}],["elements",{"_index":236,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["emitted",{"_index":50,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["error",{"_index":67,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["etc",{"_index":456,"title":{},"body":{"index.html":{}}}],["event",{"_index":48,"title":{},"body":{"components/Alert.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"license.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{}}}],["eventemitter",{"_index":47,"title":{},"body":{"components/Alert.html":{},"components/Modal.html":{},"components/Multiselect.html":{}}}],["events",{"_index":551,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["express",{"_index":517,"title":{},"body":{"license.html":{}}}],["false",{"_index":78,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{}}}],["family",{"_index":559,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["feature",{"_index":355,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"coverage.html":{}}}],["files",{"_index":366,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["fill:#f9f,stroke:#333,stroke",{"_index":570,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["filtereditems",{"_index":266,"title":{},"body":{"components/Multiselect.html":{}}}],["first",{"_index":430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fitness",{"_index":522,"title":{},"body":{"license.html":{}}}],["following",{"_index":506,"title":{},"body":{"license.html":{}}}],["font",{"_index":558,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["fork",{"_index":349,"title":{},"body":{"contributing.html":{}}}],["forked",{"_index":351,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":420,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["format(first",{"_index":427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["found",{"_index":320,"title":{},"body":{"components/Multiselect.html":{}}}],["free",{"_index":481,"title":{},"body":{"license.html":{}}}],["function",{"_index":231,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["functions",{"_index":425,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":504,"title":{},"body":{"license.html":{}}}],["generated",{"_index":395,"title":{},"body":{"contributing.html":{}}}],["getselected",{"_index":190,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["getting",{"_index":344,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":357,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":480,"title":{},"body":{"license.html":{}}}],["graph",{"_index":568,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["h",{"_index":83,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["handlecancelclick",{"_index":161,"title":{},"body":{"components/Modal.html":{}}}],["handleclick",{"_index":191,"title":{},"body":{"components/Multiselect.html":{}}}],["handleclick(event",{"_index":198,"title":{},"body":{"components/Multiselect.html":{}}}],["handleclose",{"_index":166,"title":{},"body":{"components/Modal.html":{}}}],["handleokclick",{"_index":164,"title":{},"body":{"components/Modal.html":{}}}],["head",{"_index":449,"title":{},"body":{"index.html":{}}}],["header",{"_index":153,"title":{},"body":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}}}],["height",{"_index":565,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["help",{"_index":348,"title":{},"body":{"contributing.html":{}}}],["hereby",{"_index":479,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":229,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["holders",{"_index":527,"title":{},"body":{"license.html":{}}}],["home",{"_index":573,"title":{},"body":{"additional-documentation/is-readmore.html":{}}}],["host",{"_index":82,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["html",{"_index":455,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":75,"title":{},"body":{"components/Alert.html":{}}}],["htmlinputelement",{"_index":265,"title":{},"body":{"components/Multiselect.html":{}}}],["https://github.com/isnur/is",{"_index":387,"title":{},"body":{"contributing.html":{}}}],["https://is",{"_index":435,"title":{},"body":{"index.html":{}}}],["https://unpkg.com/is",{"_index":444,"title":{},"body":{"index.html":{}}}],["id",{"_index":131,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"index.html":{}}}],["identifier",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["ilabelto",{"_index":125,"title":{"interfaces/ILabelTo.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["implements",{"_index":171,"title":{},"body":{"components/Multiselect.html":{}}}],["implied",{"_index":518,"title":{},"body":{"license.html":{}}}],["import",{"_index":81,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["included",{"_index":511,"title":{},"body":{"license.html":{}}}],["including",{"_index":491,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"miscellaneous/functions.html":{}}}],["index.html",{"_index":450,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["install",{"_index":439,"title":{},"body":{"index.html":{}}}],["installation",{"_index":438,"title":{},"body":{"index.html":{}}}],["interact",{"_index":216,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["interface",{"_index":124,"title":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":126,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"overview.html":{}}}],["isclickinside",{"_index":261,"title":{},"body":{"components/Multiselect.html":{}}}],["iselectitem",{"_index":130,"title":{"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["isexpanded",{"_index":175,"title":{},"body":{"components/Multiselect.html":{}}}],["isselected",{"_index":286,"title":{},"body":{"components/Multiselect.html":{}}}],["issue",{"_index":386,"title":{},"body":{"contributing.html":{}}}],["item",{"_index":287,"title":{},"body":{"components/Multiselect.html":{}}}],["item.id",{"_index":290,"title":{},"body":{"components/Multiselect.html":{}}}],["item.name",{"_index":319,"title":{},"body":{"components/Multiselect.html":{}}}],["items",{"_index":176,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["itoggleoptions",{"_index":132,"title":{"interfaces/IToggleOptions.html":{}},"body":{"interfaces/IToggleOptions.html":{},"components/Readmore.html":{},"coverage.html":{},"additional-documentation/is-readmore.html":{}}}],["jsx",{"_index":454,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":177,"title":{},"body":{"components/Multiselect.html":{}}}],["kind",{"_index":516,"title":{},"body":{"license.html":{}}}],["label",{"_index":223,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelselected",{"_index":178,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelto",{"_index":179,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["last",{"_index":429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["left",{"_index":332,"title":{},"body":{"components/Readmore.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-readmore.html":{}}}],["liability",{"_index":531,"title":{},"body":{"license.html":{}}}],["liable",{"_index":528,"title":{},"body":{"license.html":{}}}],["license",{"_index":473,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":68,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["limit",{"_index":180,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["limitation",{"_index":492,"title":{},"body":{"license.html":{}}}],["limited",{"_index":519,"title":{},"body":{"license.html":{}}}],["limittext",{"_index":181,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["list",{"_index":219,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["listen",{"_index":251,"title":{},"body":{"components/Multiselect.html":{}}}],["listen('click",{"_index":200,"title":{},"body":{"components/Multiselect.html":{}}}],["local",{"_index":353,"title":{},"body":{"contributing.html":{}}}],["m",{"_index":373,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":80,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"contributing.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{}}}],["matching",{"_index":114,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["max",{"_index":182,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["maximum",{"_index":239,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["merchantability",{"_index":521,"title":{},"body":{"license.html":{}}}],["merge",{"_index":495,"title":{},"body":{"license.html":{}}}],["message",{"_index":234,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["metadata",{"_index":7,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["method",{"_index":195,"title":{},"body":{"components/Multiselect.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"additional-documentation/is-multiselect.html":{}}}],["middle",{"_index":428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":424,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":474,"title":{},"body":{"license.html":{}}}],["modal",{"_index":108,"title":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-modal.html":{}}}],["modal.scss",{"_index":139,"title":{},"body":{"components/Modal.html":{}}}],["modalheader",{"_index":142,"title":{},"body":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}}}],["modaltitle",{"_index":143,"title":{},"body":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}}}],["modify",{"_index":494,"title":{},"body":{"license.html":{}}}],["modules",{"_index":541,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":253,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["mouseevent",{"_index":199,"title":{},"body":{"components/Multiselect.html":{}}}],["multiselect",{"_index":109,"title":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["multiselect.scss",{"_index":173,"title":{},"body":{"components/Multiselect.html":{}}}],["mutable",{"_index":160,"title":{},"body":{"components/Modal.html":{}}}],["name",{"_index":105,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["new",{"_index":360,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["newvalue",{"_index":210,"title":{},"body":{"components/Multiselect.html":{}}}],["nice",{"_index":465,"title":{},"body":{"index.html":{}}}],["no_entry_sign",{"_index":390,"title":{},"body":{"contributing.html":{}}}],["noninfringement",{"_index":525,"title":{},"body":{"license.html":{}}}],["notice",{"_index":509,"title":{},"body":{"license.html":{}}}],["npm",{"_index":364,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":72,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["number",{"_index":51,"title":{},"body":{"components/Alert.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["obj.id",{"_index":289,"title":{},"body":{"components/Multiselect.html":{}}}],["obj['name'].tolowercase().includes(this.keyword.tolowercase",{"_index":302,"title":{},"body":{"components/Multiselect.html":{}}}],["obtaining",{"_index":484,"title":{},"body":{"license.html":{}}}],["ok",{"_index":159,"title":{},"body":{"components/Modal.html":{},"contributing.html":{},"additional-documentation/is-modal.html":{}}}],["oldvalue",{"_index":207,"title":{},"body":{"components/Multiselect.html":{}}}],["one",{"_index":466,"title":{},"body":{"index.html":{}}}],["onfiltereditems",{"_index":296,"title":{},"body":{"components/Multiselect.html":{}}}],["open",{"_index":335,"title":{},"body":{"components/Readmore.html":{},"index.html":{},"additional-documentation/is-readmore.html":{}}}],["option",{"_index":224,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["optional",{"_index":19,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":62,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["origin",{"_index":375,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":536,"title":{},"body":{"license.html":{}}}],["out",{"_index":538,"title":{},"body":{"license.html":{}}}],["outside",{"_index":276,"title":{},"body":{"components/Multiselect.html":{}}}],["overview",{"_index":542,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["padding",{"_index":562,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["page",{"_index":545,"title":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}},"body":{}}],["pagination",{"_index":471,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":204,"title":{},"body":{"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":523,"title":{},"body":{"license.html":{}}}],["pass",{"_index":237,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["permission",{"_index":478,"title":{},"body":{"license.html":{}}}],["permit",{"_index":502,"title":{},"body":{"license.html":{}}}],["person",{"_index":483,"title":{},"body":{"license.html":{}}}],["persons",{"_index":503,"title":{},"body":{"license.html":{}}}],["pick",{"_index":240,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder",{"_index":183,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder={this.placeholder",{"_index":308,"title":{},"body":{"components/Multiselect.html":{}}}],["portions",{"_index":513,"title":{},"body":{"license.html":{}}}],["primary",{"_index":63,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["private",{"_index":87,"title":{},"body":{"components/Alert.html":{},"components/Modal.html":{},"components/Multiselect.html":{}}}],["process",{"_index":233,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["project",{"_index":398,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":197,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise.resolve(this.selected",{"_index":254,"title":{},"body":{"components/Multiselect.html":{}}}],["prop",{"_index":41,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["prop({mutable",{"_index":149,"title":{},"body":{"components/Modal.html":{}}}],["properties",{"_index":14,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["property",{"_index":546,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["props,function",{"_index":399,"title":{},"body":{"contributing.html":{}}}],["provided",{"_index":514,"title":{},"body":{"license.html":{}}}],["public",{"_index":141,"title":{},"body":{"components/Modal.html":{}}}],["publish",{"_index":496,"title":{},"body":{"license.html":{}}}],["pull",{"_index":377,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":524,"title":{},"body":{"license.html":{}}}],["push",{"_index":374,"title":{},"body":{"contributing.html":{}}}],["put",{"_index":447,"title":{},"body":{"index.html":{}}}],["radius",{"_index":557,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["raising_hand",{"_index":347,"title":{},"body":{"contributing.html":{}}}],["read",{"_index":461,"title":{},"body":{"index.html":{}}}],["readmore",{"_index":110,"title":{"components/Readmore.html":{},"additional-documentation/is-readmore.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"coverage.html":{},"index.html":{}}}],["readmore.interface",{"_index":338,"title":{},"body":{"components/Readmore.html":{}}}],["readmore.scss",{"_index":322,"title":{},"body":{"components/Readmore.html":{}}}],["ref={el",{"_index":307,"title":{},"body":{"components/Multiselect.html":{}}}],["reflecttoattr",{"_index":150,"title":{},"body":{"components/Modal.html":{}}}],["remember",{"_index":464,"title":{},"body":{"index.html":{}}}],["remove",{"_index":128,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["remove={this.isselected(item",{"_index":315,"title":{},"body":{"components/Multiselect.html":{}}}],["render",{"_index":28,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["renderclosetext",{"_index":90,"title":{},"body":{"components/Alert.html":{}}}],["renderselecteditems",{"_index":267,"title":{},"body":{"components/Multiselect.html":{}}}],["repo",{"_index":352,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":378,"title":{},"body":{"contributing.html":{}}}],["rest",{"_index":228,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["restriction",{"_index":490,"title":{},"body":{"license.html":{}}}],["result",{"_index":113,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["results",{"_index":115,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["return",{"_index":92,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["returns",{"_index":31,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-multiselect.html":{}}}],["right",{"_index":330,"title":{},"body":{"components/Readmore.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["rights",{"_index":493,"title":{},"body":{"license.html":{}}}],["rounded",{"_index":24,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["run",{"_index":365,"title":{},"body":{"contributing.html":{}}}],["save",{"_index":156,"title":{},"body":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}}}],["savetext",{"_index":144,"title":{},"body":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}}}],["saveyou",{"_index":441,"title":{},"body":{"index.html":{}}}],["scoped",{"_index":11,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{}}}],["script",{"_index":446,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":64,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["seconds",{"_index":54,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["secs",{"_index":549,"title":{},"body":{"additional-documentation/is-alert.html":{}}}],["see",{"_index":468,"title":{},"body":{"index.html":{}}}],["select",{"_index":129,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-multiselect.html":{}}}],["select.items",{"_index":460,"title":{},"body":{"index.html":{}}}],["select={!this.isselected(item",{"_index":317,"title":{},"body":{"components/Multiselect.html":{}}}],["selected",{"_index":184,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["selected={this.isselected(item",{"_index":313,"title":{},"body":{"components/Multiselect.html":{}}}],["selected[this.limit",{"_index":272,"title":{},"body":{"components/Multiselect.html":{}}}],["selectedchanged",{"_index":185,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["selector",{"_index":106,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["sell",{"_index":500,"title":{},"body":{"license.html":{}}}],["setitems",{"_index":192,"title":{},"body":{"components/Multiselect.html":{}}}],["setitems(newvalue",{"_index":206,"title":{},"body":{"components/Multiselect.html":{}}}],["setposition",{"_index":325,"title":{},"body":{"components/Readmore.html":{}}}],["setselected",{"_index":193,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected(newvalue",{"_index":211,"title":{},"body":{"components/Multiselect.html":{}}}],["settimeout",{"_index":278,"title":{},"body":{"components/Multiselect.html":{}}}],["shall",{"_index":510,"title":{},"body":{"license.html":{}}}],["show",{"_index":152,"title":{},"body":{"components/Modal.html":{},"components/Multiselect.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{}}}],["shown",{"_index":235,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["showselectedbadge",{"_index":186,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["similar",{"_index":448,"title":{},"body":{"index.html":{}}}],["size",{"_index":560,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["software",{"_index":486,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"index.html":{}}}],["src/.../utils.ts",{"_index":426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components",{"_index":402,"title":{},"body":{"contributing.html":{}}}],["src/components/alert/alert.tsx",{"_index":6,"title":{},"body":{"components/Alert.html":{},"coverage.html":{}}}],["src/components/alert/alert.tsx:12",{"_index":61,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:17",{"_index":42,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:22",{"_index":53,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:27",{"_index":45,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:32",{"_index":57,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:37",{"_index":79,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:39",{"_index":74,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:41",{"_index":77,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:51",{"_index":49,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:60",{"_index":30,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:68",{"_index":34,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:74",{"_index":35,"title":{},"body":{"components/Alert.html":{}}}],["src/components/badge/badge.tsx",{"_index":116,"title":{},"body":{"components/Badge.html":{},"coverage.html":{}}}],["src/components/badge/badge.tsx:12",{"_index":119,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:17",{"_index":121,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:22",{"_index":120,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:24",{"_index":118,"title":{},"body":{"components/Badge.html":{}}}],["src/components/modal/modal.tsx",{"_index":138,"title":{},"body":{"components/Modal.html":{},"coverage.html":{}}}],["src/components/modal/modal.tsx:15",{"_index":155,"title":{},"body":{"components/Modal.html":{}}}],["src/components/modal/modal.tsx:20",{"_index":148,"title":{},"body":{"components/Modal.html":{}}}],["src/components/modal/modal.tsx:25",{"_index":157,"title":{},"body":{"components/Modal.html":{}}}],["src/components/modal/modal.tsx:34",{"_index":158,"title":{},"body":{"components/Modal.html":{}}}],["src/components/modal/modal.tsx:43",{"_index":151,"title":{},"body":{"components/Modal.html":{}}}],["src/components/modal/modal.tsx:60",{"_index":146,"title":{},"body":{"components/Modal.html":{}}}],["src/components/multiselect/multiselect.interface.tsx",{"_index":127,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx",{"_index":170,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx:104",{"_index":213,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:111",{"_index":203,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:204",{"_index":194,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:214",{"_index":205,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:25",{"_index":214,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:30",{"_index":241,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:35",{"_index":218,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:40",{"_index":242,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:45",{"_index":226,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:53",{"_index":227,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:58",{"_index":232,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:63",{"_index":222,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:68",{"_index":245,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:73",{"_index":238,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:75",{"_index":217,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:76",{"_index":220,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:77",{"_index":249,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:78",{"_index":247,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:84",{"_index":196,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:91",{"_index":243,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:94",{"_index":209,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/readmore/readmore.interface.ts",{"_index":133,"title":{},"body":{"interfaces/IToggleOptions.html":{},"coverage.html":{}}}],["src/components/readmore/readmore.tsx",{"_index":321,"title":{},"body":{"components/Readmore.html":{},"coverage.html":{}}}],["src/components/readmore/readmore.tsx:12",{"_index":336,"title":{},"body":{"components/Readmore.html":{}}}],["src/components/readmore/readmore.tsx:18",{"_index":334,"title":{},"body":{"components/Readmore.html":{}}}],["src/components/readmore/readmore.tsx:20",{"_index":333,"title":{},"body":{"components/Readmore.html":{}}}],["src/components/readmore/readmore.tsx:24",{"_index":328,"title":{},"body":{"components/Readmore.html":{}}}],["src/components/readmore/readmore.tsx:34",{"_index":326,"title":{},"body":{"components/Readmore.html":{}}}],["src/components/readmore/readmore.tsx:38",{"_index":327,"title":{},"body":{"components/Readmore.html":{}}}],["src/utils/utils.ts",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stage",{"_index":369,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":381,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":345,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":73,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["statements",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["stencil/core",{"_index":84,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["stenciljs",{"_index":433,"title":{},"body":{"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["string",{"_index":55,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{}}}],["style",{"_index":305,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["styleurl",{"_index":9,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["subject",{"_index":505,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":498,"title":{},"body":{"license.html":{}}}],["submit",{"_index":376,"title":{},"body":{"contributing.html":{}}}],["substantial",{"_index":512,"title":{},"body":{"license.html":{}}}],["success",{"_index":65,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["table",{"_index":423,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":472,"title":{},"body":{"index.html":{}}}],["tag",{"_index":8,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"index.html":{}}}],["tags",{"_index":187,"title":{},"body":{"components/Multiselect.html":{}}}],["target",{"_index":201,"title":{},"body":{"components/Multiselect.html":{}}}],["td",{"_index":569,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["template",{"_index":453,"title":{},"body":{"index.html":{}}}],["text",{"_index":60,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["textclass",{"_index":134,"title":{},"body":{"interfaces/IToggleOptions.html":{},"components/Readmore.html":{},"additional-documentation/is-readmore.html":{}}}],["textclose",{"_index":135,"title":{},"body":{"interfaces/IToggleOptions.html":{},"components/Readmore.html":{},"additional-documentation/is-readmore.html":{}}}],["textinput",{"_index":264,"title":{},"body":{"components/Multiselect.html":{}}}],["textopen",{"_index":136,"title":{},"body":{"interfaces/IToggleOptions.html":{},"components/Readmore.html":{},"additional-documentation/is-readmore.html":{}}}],["textposition",{"_index":137,"title":{},"body":{"interfaces/IToggleOptions.html":{},"components/Readmore.html":{},"additional-documentation/is-readmore.html":{}}}],["textselected",{"_index":188,"title":{},"body":{"components/Multiselect.html":{}}}],["this.autoclose",{"_index":100,"title":{},"body":{"components/Alert.html":{}}}],["this.cancel.emit",{"_index":163,"title":{},"body":{"components/Modal.html":{}}}],["this.canceltext",{"_index":168,"title":{},"body":{"components/Modal.html":{}}}],["this.close",{"_index":97,"title":{},"body":{"components/Alert.html":{}}}],["this.close()}>{this.closetext",{"_index":93,"title":{},"body":{"components/Alert.html":{}}}],["this.closeable",{"_index":91,"title":{},"body":{"components/Alert.html":{}}}],["this.closed.emit(true",{"_index":88,"title":{},"body":{"components/Alert.html":{}}}],["this.closesecs",{"_index":98,"title":{},"body":{"components/Alert.html":{}}}],["this.contentexpanded",{"_index":339,"title":{},"body":{"components/Readmore.html":{}}}],["this.countdowntimerid",{"_index":95,"title":{},"body":{"components/Alert.html":{}}}],["this.el.attributes['auto",{"_index":94,"title":{},"body":{"components/Alert.html":{}}}],["this.el.remove",{"_index":89,"title":{},"body":{"components/Alert.html":{}}}],["this.filtereditems",{"_index":300,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.length",{"_index":310,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.map((item",{"_index":311,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isexpanded",{"_index":277,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isselected(item",{"_index":292,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items",{"_index":255,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items.filter(obj",{"_index":301,"title":{},"body":{"components/Multiselect.html":{}}}],["this.keyword",{"_index":298,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelselected",{"_index":314,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.remove",{"_index":316,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.select",{"_index":318,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limit",{"_index":271,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limittext(count",{"_index":274,"title":{},"body":{"components/Multiselect.html":{}}}],["this.max",{"_index":294,"title":{},"body":{"components/Multiselect.html":{}}}],["this.modaltitle",{"_index":167,"title":{},"body":{"components/Modal.html":{}}}],["this.multiselect",{"_index":303,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect.contains(event.target",{"_index":262,"title":{},"body":{"components/Multiselect.html":{}}}],["this.ok.emit",{"_index":165,"title":{},"body":{"components/Modal.html":{}}}],["this.onfiltereditems",{"_index":258,"title":{},"body":{"components/Multiselect.html":{}}}],["this.placeholder",{"_index":248,"title":{},"body":{"components/Multiselect.html":{}}}],["this.renderclosetext",{"_index":102,"title":{},"body":{"components/Alert.html":{}}}],["this.renderselecteditems",{"_index":285,"title":{},"body":{"components/Multiselect.html":{}}}],["this.savetext",{"_index":169,"title":{},"body":{"components/Modal.html":{}}}],["this.selected",{"_index":257,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.filter(obj",{"_index":293,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.length",{"_index":270,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.map((item",{"_index":268,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.some(obj",{"_index":288,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selectedchanged.emit(this.selected",{"_index":295,"title":{},"body":{"components/Multiselect.html":{}}}],["this.showselectedbadge",{"_index":283,"title":{},"body":{"components/Multiselect.html":{}}}],["this.tags",{"_index":284,"title":{},"body":{"components/Multiselect.html":{}}}],["this.text",{"_index":123,"title":{},"body":{"components/Badge.html":{}}}],["this.textinput",{"_index":297,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textinput.focus",{"_index":279,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textselected",{"_index":256,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle",{"_index":341,"title":{},"body":{"components/Readmore.html":{}}}],["this.toggle(!this.isexpanded)}>&nbsp",{"_index":309,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(false",{"_index":263,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(true",{"_index":304,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggleoptions.textclose",{"_index":342,"title":{},"body":{"components/Readmore.html":{}}}],["this.toggleoptions.textopen",{"_index":343,"title":{},"body":{"components/Readmore.html":{}}}],["this.toggleoptions.textposition",{"_index":340,"title":{},"body":{"components/Readmore.html":{}}}],["this.updateitems(item",{"_index":312,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item)}>x",{"_index":269,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateplaceholder",{"_index":259,"title":{},"body":{"components/Multiselect.html":{}}}],["this.visible",{"_index":162,"title":{},"body":{"components/Modal.html":{}}}],["tip",{"_index":379,"title":{},"body":{"contributing.html":{}}}],["title",{"_index":154,"title":{},"body":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}}}],["toggle",{"_index":275,"title":{},"body":{"components/Multiselect.html":{},"components/Readmore.html":{},"additional-documentation/is-readmore.html":{}}}],["toggleoptions",{"_index":324,"title":{},"body":{"components/Readmore.html":{},"additional-documentation/is-readmore.html":{}}}],["top",{"_index":432,"title":{},"body":{"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["tort",{"_index":535,"title":{},"body":{"license.html":{}}}],["true",{"_index":12,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"coverage.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-modal.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["u2573",{"_index":56,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["u2713",{"_index":221,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["undefined",{"_index":550,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["unpkg",{"_index":442,"title":{},"body":{"index.html":{}}}],["updateitems",{"_index":291,"title":{},"body":{"components/Multiselect.html":{}}}],["updateplaceholder",{"_index":281,"title":{},"body":{"components/Multiselect.html":{}}}],["use",{"_index":451,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":567,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["user",{"_index":215,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["using",{"_index":440,"title":{},"body":{"index.html":{}}}],["value",{"_index":39,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["var",{"_index":103,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Modal.html":{},"components/Multiselect.html":{},"components/Readmore.html":{},"index.html":{}}}],["visible",{"_index":145,"title":{},"body":{"components/Modal.html":{},"additional-documentation/is-modal.html":{}}}],["void",{"_index":33,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"components/Readmore.html":{}}}],["warning",{"_index":66,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["warranties",{"_index":520,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":515,"title":{},"body":{"license.html":{}}}],["watch",{"_index":250,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('items",{"_index":208,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('selected",{"_index":212,"title":{},"body":{"components/Multiselect.html":{}}}],["web",{"_index":388,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["weight",{"_index":561,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["whether",{"_index":532,"title":{},"body":{"license.html":{}}}],["white",{"_index":69,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["width:4px",{"_index":571,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["window.clearinterval(this.countdowntimerid",{"_index":101,"title":{},"body":{"components/Alert.html":{}}}],["window.settimeout",{"_index":96,"title":{},"body":{"components/Alert.html":{}}}],["within",{"_index":230,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["without",{"_index":489,"title":{},"body":{"license.html":{}}}],["www",{"_index":394,"title":{},"body":{"contributing.html":{}}}],["yours",{"_index":368,"title":{},"body":{"contributing.html":{}}}],["zindex",{"_index":306,"title":{},"body":{"components/Multiselect.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Alert.html":{"url":"components/Alert.html","title":"component - Alert","body":"\n                   \n\n\n\n\n\n  Components\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/alert/alert.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-alert\n            \n\n            \n                styleUrl\n                alert.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoClose\n                            \n                            \n                                closeable\n                            \n                            \n                                closed\n                            \n                            \n                                closeSecs\n                            \n                            \n                                    Optional\n                                closeText\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                countDownTimerId\n                            \n                            \n                                el\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                componentDidUnload\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidUnload\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidUnload()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:17\n                            \n                        \n\n                \n                    \n                        If true alert will close automatically.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:27\n                            \n                        \n\n                \n                    \n                        If closable or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:51\n                            \n                        \n\n                \n                    \n                        Emitted when the alert is closed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeSecs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:22\n                            \n                        \n\n                \n                    \n                        Number of seconds to close alert automatically if autoClose true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            closeText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u2573'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:32\n                            \n                        \n\n                \n                    \n                        Customized close button text.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countDownTimerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:37\n                            \n                        \n\n                \n                    \n                        If true, make the alert rounded.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, State, Event, EventEmitter, Element, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-alert',\n  styleUrl: 'alert.scss',\n  scoped: true\n})\nexport class Alert {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * If `true` alert will close automatically.\n   */\n  @Prop() autoClose: boolean = true;\n\n  /**\n   * Number of seconds to close alert automatically if autoClose `true`.\n   */\n  @Prop() closeSecs: number = 3;\n\n  /**\n   * If closable or not.\n   */\n  @Prop() closeable: boolean = true;\n\n  /**\n   * Customized close button text.\n   */\n  @Prop() closeText?: string = '\\u2573';\n\n  /**\n   * If `true`, make the alert rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  @State() countDownTimerId = null;\n\n  @Element() el: HTMLElement;\n\n  private close = () => {\n    this.closed.emit(true);\n    this.el.remove()\n  }\n\n  /**\n   * Emitted when the alert is closed.\n   */\n  @Event() closed: EventEmitter;\n\n  private renderCloseText = () => {\n    if (this.closeable) {\n      return  this.close()}>{this.closeText}\n    }\n    return null;\n  };\n\n  componentDidLoad() {\n    if (this.el.attributes['auto-close']) {\n      this.countDownTimerId = window.setTimeout(() => {\n        this.close()\n      }, this.closeSecs * 1000)\n    }\n  }\n\n  componentDidUnload() {\n    if (this.autoClose) {\n      window.clearInterval(this.countDownTimerId);\n    }\n  }\n\n  render() {\n    return (\n      \n        \n          \n        \n        {this.renderCloseText()}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Modal', 'selector': ''},{'name': 'Multiselect', 'selector': ''},{'name': 'Readmore', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Alert'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Badge.html":{"url":"components/Badge.html","title":"component - Badge","body":"\n                   \n\n\n\n\n\n  Components\n  Badge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/badge/badge.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-badge\n            \n\n            \n                styleUrl\n                badge.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/badge/badge.tsx:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:22\n                            \n                        \n\n                \n                    \n                        If true, make the badge rounded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:17\n                            \n                        \n\n                \n                    \n                        The text to display in the badge.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-badge',\n  styleUrl: 'badge.scss',\n  scoped: true\n})\nexport class Badge {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * The text to display in the badge.\n   */\n  @Prop() text: string;\n\n  /**\n   * If `true`, make the badge rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  render() {\n    return (\n      \n        {this.text}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Modal', 'selector': ''},{'name': 'Multiselect', 'selector': ''},{'name': 'Readmore', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Badge'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelTo.html":{"url":"interfaces/ILabelTo.html","title":"interface - ILabelTo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILabelTo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        remove\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectItem.html":{"url":"interfaces/ISelectItem.html","title":"interface - ISelectItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISelectItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IToggleOptions.html":{"url":"interfaces/IToggleOptions.html","title":"interface - IToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/readmore/readmore.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        textClass\n                                \n                                \n                                        textClose\n                                \n                                \n                                        textOpen\n                                \n                                \n                                        textPosition\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        textClass\n                                    \n                                \n                                \n                                    \n                                        textClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textClose\n                                    \n                                \n                                \n                                    \n                                        textClose:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textOpen\n                                    \n                                \n                                \n                                    \n                                        textOpen:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textPosition\n                                    \n                                \n                                \n                                    \n                                        textPosition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IToggleOptions {\n    textOpen: string;\n    textClose: string;\n    textPosition: string;\n    textClass: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Modal.html":{"url":"components/Modal.html","title":"component - Modal","body":"\n                   \n\n\n\n\n\n  Components\n  Modal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/modal/modal.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-modal\n            \n\n            \n                styleUrl\n                modal.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cancelText\n                            \n                            \n                                    Public\n                                modalHeader\n                            \n                            \n                                modalTitle\n                            \n                            \n                                saveText\n                            \n                            \n                                    Public\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/modal/modal.tsx:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Cancel'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/modal/modal.tsx:20\n                            \n                        \n\n                \n                    \n                        The text to display in the cancel button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({mutable: true, reflectToAttr: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/modal/modal.tsx:43\n                            \n                        \n\n                \n                    \n                        If 'true' will show the modal header.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Modal Title'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/modal/modal.tsx:15\n                            \n                        \n\n                \n                    \n                        The title to display in the modal.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Save'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/modal/modal.tsx:25\n                            \n                        \n\n                \n                    \n                        The text to display in the save button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({mutable: true, reflectToAttr: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/modal/modal.tsx:34\n                            \n                        \n\n                \n                    \n                        If 'true' will make the modal visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'is-modal',\n  styleUrl: 'modal.scss',\n  scoped: true\n})\nexport class Modal {\n  @Event() private ok: EventEmitter;\n  @Event() private cancel: EventEmitter;\n\n  /**\n   * The title to display in the modal.\n   */\n  @Prop() modalTitle: string = 'Modal Title';\n\n  /**\n   * The text to display in the cancel button.\n   */\n  @Prop() cancelText: string = 'Cancel';\n\n  /**\n   * The text to display in the save button.\n   */\n  @Prop() saveText: string = 'Save';\n\n  /**\n   * If 'true' will make the modal visible.\n   */\n  @Prop({\n    mutable: true,\n    reflectToAttr: true\n  })\n  public visible: boolean = false;\n\n  /**\n   * If 'true' will show the modal header.\n   */\n  @Prop({\n    mutable: true,\n    reflectToAttr: true\n  })\n  public modalHeader: boolean = false;\n\n  private handleCancelClick = () => {\n    this.visible = false;\n    this.cancel.emit()\n  };\n\n  private handleOkClick = () => {\n    this.visible = false;\n    this.ok.emit()\n  };\n\n  private handleClose = () => {\n    this.visible = false;\n  };\n\n\n  render() {\n    return (\n      \n        \n          \n            {this.modalTitle}\n            \n              ×\n            \n          \n          \n            \n          \n          \n            {this.cancelText}\n            {this.saveText}\n          \n        \n      \n    )\n  }\n\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Modal', 'selector': ''},{'name': 'Multiselect', 'selector': ''},{'name': 'Readmore', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Modal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Multiselect.html":{"url":"components/Multiselect.html","title":"component - Multiselect","body":"\n                   \n\n\n\n\n\n  Components\n  Multiselect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/multiselect/multiselect.tsx\n\n\n\n\n    \n        Implements\n    \n    \n                ComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-multiselect\n            \n\n            \n                styleUrl\n                multiselect.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isExpanded\n                            \n                            \n                                items\n                            \n                            \n                                keyword\n                            \n                            \n                                labelSelected\n                            \n                            \n                                labelTo\n                            \n                            \n                                limit\n                            \n                            \n                                limitText\n                            \n                            \n                                max\n                            \n                            \n                                placeholder\n                            \n                            \n                                selected\n                            \n                            \n                                selectedChanged\n                            \n                            \n                                showSelectedBadge\n                            \n                            \n                                tags\n                            \n                            \n                                textSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentWillLoad\n                            \n                            \n                                getSelected\n                            \n                            \n                                handleClick\n                            \n                            \n                                render\n                            \n                            \n                                setItems\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentWillLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentWillLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelected\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelected()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Method()\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:84\n                \n            \n\n\n            \n                \n                    Get the selected items.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Listen('click', {target: 'document'})\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItems\n                        \n                        \n                    \n                \n            \n            \n                \nsetItems(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('items')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelected\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelected(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('selected')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:25\n                            \n                        \n\n                \n                    \n                        If true, the user cannot interact with the select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:35\n                            \n                        \n\n                \n                    \n                        The options list items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u2713'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:63\n                            \n                        \n\n                \n                    \n                        The label when option is selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILabelTo\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  }\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:45\n                            \n                        \n\n                \n                    \n                        The label to remove or select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:53\n                            \n                        \n\n                \n                    \n                        Limit the display of selected options. The rest will be hidden within the limitText string.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:58\n                            \n                        \n\n                \n                    \n                        Function that process the message shown when selected elements pass the defined limit.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:73\n                            \n                        \n\n                \n                    \n                        Maximum selected items can be selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Pick some\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:30\n                            \n                        \n\n                \n                    \n                        The text to display when not selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:40\n                            \n                        \n\n                \n                    \n                        The selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:91\n                            \n                        \n\n                \n                    \n                        Emitted when the selected items has changed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSelectedBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:68\n                            \n                        \n\n                \n                    \n                        If true, The badges will show selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.placeholder\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  Host,\n  Prop,\n  State,\n  Method,\n  Watch,\n  Listen,\n  Event,\n  EventEmitter,\n  h\n} from '@stencil/core';\n\n@Component({\n  tag: 'is-multiselect',\n  styleUrl: 'multiselect.scss',\n  scoped: true\n})\nexport class Multiselect implements ComponentInterface {\n\n  /**\n   * If `true`, the user cannot interact with the select.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * The text to display when not selected items.\n   */\n  @Prop() placeholder: string = \"Pick some\";\n\n  /**\n   * The options list items.\n   */\n  @Prop() items: ISelectItem[] = [];\n\n  /**\n   * The selected items.\n   */\n  @Prop() selected: ISelectItem[] = [];\n\n  /**\n   * The label to remove or select.\n   */\n  @Prop() labelTo: ILabelTo = {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  };\n\n  /**\n   * Limit the display of selected options. The rest will be hidden within the limitText string.\n   */\n  @Prop() limit: number = 3;\n\n  /**\n   * Function that process the message shown when selected elements pass the defined limit.\n   */\n  @Prop() limitText: Function = (count: number) => 'and ' + count + ' more';\n\n  /**\n   * The label when option is selected.\n   */\n  @Prop() labelSelected: string = '\\u2713';\n\n  /**\n   * If `true`, The badges will show selected items.\n   */\n  @Prop() showSelectedBadge: boolean = false;\n\n  /**\n   * Maximum selected items can be selected.\n   */\n  @Prop() max: number;\n\n  @State() isExpanded: boolean = false;\n  @State() keyword: string = '';\n  @State() textSelected: string = this.placeholder;\n  @State() tags = null;\n\n  /**\n   * Get the selected items.\n   */\n  @Method()\n  getSelected(): Promise {\n    return Promise.resolve(this.selected);\n  }\n\n  /**\n   * Emitted when the selected items has changed.\n   */\n  @Event() selectedChanged: EventEmitter;\n\n  @Watch('items')\n  setItems(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.items = newValue;\n      this.textSelected = this.placeholder;\n      this.selected = [];\n      this.onFilteredItems();\n    }\n  }\n\n  @Watch('selected')\n  setSelected(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.updatePlaceholder();\n    }\n  }\n\n  @Listen('click', {target: 'document'})\n  handleClick(event: MouseEvent) {\n    const isClickInside = this.multiselect.contains(event.target);\n\n    if (!isClickInside) {\n      this.toggle(false, true);\n    }\n  }\n\n  private textInput?: HTMLInputElement;\n  private multiselect?: any;\n  private filteredItems: ISelectItem[] = this.items;\n\n  private renderSelectedItems = () => {\n    let selected = [];\n    if (this.selected) {\n      this.selected.map((item, i) => {\n        if (i \n              \n               this.updateItems(item)}>x\n            \n          );\n        } else {\n          const count = this.selected.length - this.limit;\n          selected[this.limit + 1] = {this.limitText(count)}\n        }\n      });\n    }\n    return selected;\n  };\n\n  private toggle = (state: boolean, outside?: boolean) => {\n    this.isExpanded = state;\n    this.updatePlaceholder();\n    if (!outside) {\n      if (this.isExpanded) {\n        setTimeout(() => {\n          this.textInput.focus();\n        }, 200);\n      }\n    }\n  };\n\n  private updatePlaceholder() {\n    this.textSelected = this.placeholder;\n    if (this.selected && this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n    if (this.isExpanded) {\n      this.textSelected = '';\n    }\n  }\n\n  private isSelected = (item: ISelectItem) => {\n    if (this.selected) {\n      return this.selected.some(obj => obj.id === item.id)\n    }\n    return false;\n  };\n\n  private updateItems = (item: ISelectItem) => {\n    if (this.isSelected(item)) {\n      this.selected = this.selected.filter(obj => {\n        return obj.id !== item.id;\n      });\n    } else {\n      if (this.selected.length !== this.max) {\n        if (this.selected && this.selected.length > 0) {\n          this.selected = [...this.selected, item];\n        } else {\n          this.selected = [item];\n        }\n      }\n    }\n    this.selectedChanged.emit(this.selected);\n  };\n\n  private onFilteredItems = () => {\n    const element = this.textInput;\n    if (element) {\n      this.keyword = element.value;\n      this.filteredItems = this.items.filter(obj => {\n        return obj['name'].toLowerCase().includes(this.keyword.toLowerCase());\n      });\n    } else {\n      this.filteredItems = this.items;\n    }\n  };\n\n  componentWillLoad() {\n    this.textSelected = this.placeholder;\n    if (this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n  }\n\n  render() {\n    return (\n       this.multiselect = el}>\n        \n\n           this.toggle(true)} style={{\n            zIndex: this.isExpanded ? '-1' : '0'\n          }}>\n          \n\n          \n            {this.showSelectedBadge && this.selected && this.selected.length > 0 ? this.tags : this.textSelected}\n          \n\n          {this.isExpanded &&\n          \n               this.onFilteredItems()}\n                  ref={el => this.textInput = el}\n                  placeholder={this.placeholder}\n              />\n          \n          }\n           this.toggle(!this.isExpanded)}>&nbsp;\n        \n        {\n          this.isExpanded &&\n          \n              \n                {\n                  this.filteredItems.length > 0 ? this.filteredItems.map((item: ISelectItem, i) => {\n                    return (\n                       this.updateItems(item)}\n                          label-selected={this.isSelected(item) ? this.labelSelected : null}\n                          label-to-remove={this.isSelected(item) ? this.labelTo.remove : null}\n                          label-to-select={!this.isSelected(item) ? this.labelTo.select : null}\n                      >{item.name}\n                    )\n                  }) : Not found\n                }\n              \n          \n        }\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Modal', 'selector': ''},{'name': 'Multiselect', 'selector': ''},{'name': 'Readmore', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Multiselect'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Readmore.html":{"url":"components/Readmore.html","title":"component - Readmore","body":"\n                   \n\n\n\n\n\n  Components\n  Readmore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/readmore/readmore.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-readmore\n            \n\n            \n                styleUrl\n                readmore.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentExpanded\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                render\n                            \n                            \n                                setPosition\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/readmore/readmore.tsx:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/readmore/readmore.tsx:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/components/readmore/readmore.tsx:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"align-right\" | \"align-center\" | \"align-left\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/components/readmore/readmore.tsx:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/readmore/readmore.tsx:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    textOpen: 'Open',\n    textClose: 'Close',\n    textPosition: 'left',\n    textClass: ''\n  }\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/readmore/readmore.tsx:12\n                            \n                        \n\n                \n                    \n                        The options to config toggle text.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { IToggleOptions } from './readmore.interface';\n\n@Component({\n  tag: 'is-readmore',\n  styleUrl: 'readmore.scss'\n})\nexport class Readmore {\n  /**\n   * The options to config toggle text.\n   */\n  @Prop() toggleOptions: IToggleOptions = {\n    textOpen: 'Open',\n    textClose: 'Close',\n    textPosition: 'left',\n    textClass: ''\n  };\n  @State() contentExpanded: boolean;\n\n  toggle() {\n    this.contentExpanded = !this.contentExpanded;\n  }\n\n  setPosition() {\n    if (this.toggleOptions.textPosition === 'right') {\n      return 'align-right';\n    } else if (this.toggleOptions.textPosition === 'center') {\n      return 'align-center';\n    } else {\n      return 'align-left';\n    }\n  }\n\n  componentDidLoad() {\n    this.contentExpanded = false;\n  }\n\n  render() {\n    return (\n      \n        \n          \n        \n         this.toggle()}>\n          {this.contentExpanded ? this.toggleOptions.textClose : this.toggleOptions.textOpen}\n        \n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Modal', 'selector': ''},{'name': 'Multiselect', 'selector': ''},{'name': 'Readmore', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Readmore'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\n:raising_hand:   How to help:\n\nFork it!\nClone your forked repo to your local\nCreate your feature branch: git checkout -b my-new-feature\nDevelop your new awesome feature\nBuild it npm run build (it will make a new files beside yours but its ok)\nStage your changes: git add .\nCommit your changes: git commit -m 'Add some feature'\nPush to the branch: git push origin my-new-feature\nSubmit a pull request!\n\nTip: \n\nif you accidentally run npm start before committing your changes, run npm run build again then commit.\nYou can browse any issue you can help at\nhttps://github.com/isnur/is-web-component/issues\n\n:no_entry_sign:   Don't edit the files in dist/, www/ - they are generated:\nWhat you can do\n:building_construction:   Building the project\n\nyou can add some new awesome components\nyou can edit or add some props,function and attribute for each components in src/components/\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/alert/alert.tsx\n            \n            component\n            Alert\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/components/badge/badge.tsx\n            \n            component\n            Badge\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/components/modal/modal.tsx\n            \n            component\n            Modal\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ILabelTo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ISelectItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.tsx\n            \n            component\n            Multiselect\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/components/readmore/readmore.interface.ts\n            \n            interface\n            IToggleOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/readmore/readmore.tsx\n            \n            component\n            Readmore\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/utils/utils.ts\n            \n            function\n            format\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            format   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(first, middle, last)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    middle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    last\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIs-Web-Component\n  \n    \nOpen source web components for building web applications. Build on top StencilJS.\nDemo\nhttps://is-web-component.isnur.com/\nDocumentation\nhttps://is-web-component.isnur.com/docs/\nInstallation\nYou can install using NPM:\nnpm i is-web-component --saveYou can install using unpkg cdn:\nhttps://unpkg.com/is-web-componentUsage\nScript tag\n\nPut a script tag similar to this\n  \n  in the head of your index.html\n\nThen you can use the element anywhere in your template, JSX, html etc.\n  is-badge\n  \n\n  is-multiselect\n  \n\n  \n    var select = document.getElementById(\"select\");\n    var data = [{\n      id: 1,\n      name: 'Data 1'\n    }, {\n      id: 2,\n      name: 'Data 2'\n    }, {\n      id: 3,\n      name: 'Data 3'\n    }];\n    select.items = data;\n  \n\nContributing\n\nRead the project Code of Conduct and remember to be nice to one another.\nSee CONTRIBUTING.md for info about how to contribute to this project.\n\nComponents\n\n is-alert\n is-badge\n is-modal\n is-multiselect\n is-pagination\n is-readmore\n is-table\n is-tabs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-alert.html":{"url":"additional-documentation/is-alert.html","title":"additional-page - is-alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-alert\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\nautoClose\nauto-close\nIf true alert will close automatically.\nboolean\ntrue\n\n\ncloseSecs\nclose-secs\nNumber of seconds to close alert automatically if autoClose true.\nnumber\n3\n\n\ncloseText\nclose-text\nCustomized close button text.\nstring\n'\\u2573'\n\n\ncloseable\ncloseable\nIf closable or not.\nboolean\ntrue\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the alert rounded.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nclosed\nEmitted when the alert is closed.\nCustomEvent\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the alert\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the alert\n\n\n--font-family\nFont family of the alert text\n\n\n--font-size\nFont size of the alert text\n\n\n--font-weight\nFont weight of the alert text\n\n\n--padding-bottom\nPadding bottom of the alert\n\n\n--padding-left\nPadding left of the alert\n\n\n--padding-right\nPadding right of the alert\n\n\n--padding-top\nPadding top of the alert\n\n\n\n\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-badge.html":{"url":"additional-documentation/is-badge.html","title":"additional-page - is-badge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-badge\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the badge rounded.\nboolean\nfalse\n\n\ntext\ntext\nThe text to display in the badge.\nstring\nundefined\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the badge\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the badge\n\n\n--font-family\nFont family of the badge text\n\n\n--font-size\nFont size of the badge text\n\n\n--font-weight\nFont weight of the badge text\n\n\n--height\nHeight of the badge\n\n\n--padding-bottom\nPadding bottom of the badge\n\n\n--padding-left\nPadding left of the badge\n\n\n--padding-right\nPadding right of the badge\n\n\n--padding-top\nPadding top of the badge\n\n\n\nDependencies\nUsed by\n\nis-multiselect\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-badge fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-modal.html":{"url":"additional-documentation/is-modal.html","title":"additional-page - is-modal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-modal\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ncancelText\ncancel-text\nThe text to display in the cancel button.\nstring\n'Cancel'\n\n\nmodalHeader\nmodal-header\nIf 'true' will show the modal header.\nboolean\nfalse\n\n\nmodalTitle\nmodal-title\nThe title to display in the modal.\nstring\n'Modal Title'\n\n\nsaveText\nsave-text\nThe text to display in the save button.\nstring\n'Save'\n\n\nvisible\nvisible\nIf 'true' will make the modal visible.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\ncancel\n\nCustomEvent\n\n\nok\n\nCustomEvent\n\n\n\n\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-multiselect.html":{"url":"additional-documentation/is-multiselect.html","title":"additional-page - is-multiselect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-multiselect\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ndisabled\ndisabled\nIf true, the user cannot interact with the select.\nboolean\nfalse\n\n\nitems\n--\nThe options list items.\nISelectItem[]\n[]\n\n\nlabelSelected\nlabel-selected\nThe label when option is selected.\nstring\n'\\u2713'\n\n\nlabelTo\n--\nThe label to remove or select.\nILabelTo\n{     remove: 'Click to Remove',     select: 'Click to Select'   }\n\n\nlimit\nlimit\nLimit the display of selected options. The rest will be hidden within the limitText string.\nnumber\n3\n\n\nlimitText\n--\nFunction that process the message shown when selected elements pass the defined limit.\nFunction\n(count: number) => 'and ' + count + ' more'\n\n\nmax\nmax\nMaximum selected items can be selected.\nnumber\nundefined\n\n\nplaceholder\nplaceholder\nThe text to display when not selected items.\nstring\n\"Pick some\"\n\n\nselected\n--\nThe selected items.\nISelectItem[]\n[]\n\n\nshowSelectedBadge\nshow-selected-badge\nIf true, The badges will show selected items.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nselectedChanged\nEmitted when the selected items has changed.\nCustomEvent\n\n\n\nMethods\ngetSelected() => Promise\nGet the selected items.\nReturns\nType: Promise\nDependencies\nDepends on\n\nis-badge\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-multiselect fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-readmore.html":{"url":"additional-documentation/is-readmore.html","title":"additional-page - is-readmore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nhome-about\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ntoggleOptions\n--\nThe options to config toggle text.\nIToggleOptions\n{     textOpen: 'Open',     textClose: 'Close',     textPosition: 'left',     textClass: ''   }\n\n\n\n\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
