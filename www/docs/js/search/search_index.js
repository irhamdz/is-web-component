var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/components/Badge.html",[0,0.833,1,0.502]],["body/components/Badge.html",[0,1.027,1,0.912,2,1.622,3,1.186,4,0.921,5,0.733,6,1.473,7,1.473,8,2.065,9,2.065,10,2.737,11,2.065,12,1.616,13,0.576,14,0.807,15,2.029,16,2.72,17,2.72,18,1.701,19,1.622,20,2.584,21,2.029,22,1.953,23,0.921,24,0.09,25,0.714,26,0.774,27,2.384,28,2.896,29,1.953,30,1.291,31,2.065,32,2.065,33,2.065,34,2.065,35,2.065,36,2.065,37,2.065,38,2.065,39,2.065,40,1.291,41,0.921,42,1.473,43,1.291,44,1.953,45,2.065,46,1.953,47,1.291,48,1.473,49,1.473,50,1.473,51,1.473,52,1.473,53,1.473,54,1.473,55,1.953,56,2.584,57,1.473,58,0.932,59,2.065,60,0.441,61,1.473,62,1.473,63,0.04,64,0.056,65,0.04]],["title/interfaces/ILabelTo.html",[66,0.833,67,0.654]],["body/interfaces/ILabelTo.html",[3,1.098,4,1.38,5,1.098,13,0.863,14,1.052,24,0.087,25,0.807,26,0.957,58,0.863,63,0.06,64,0.073,65,0.06,66,1.339,67,1.052,68,1.734,69,1.734,70,1.891,71,1.891,72,0.863,73,2.207,74,1.38]],["title/interfaces/ISelectItem.html",[66,0.833,72,0.654]],["body/interfaces/ISelectItem.html",[3,1.098,4,1.38,5,1.098,13,0.863,14,1.052,24,0.087,25,0.807,26,0.929,58,1.182,63,0.06,64,0.073,65,0.06,66,1.339,67,0.863,68,1.734,69,1.734,70,1.38,71,1.38,72,1.052,73,3.025,74,1.817]],["title/components/Multiselect.html",[0,0.833,60,0.502]],["body/components/Multiselect.html",[0,0.43,1,0.148,2,0.68,3,0.246,4,0.309,5,0.246,7,0.495,8,0.865,9,0.865,11,0.865,12,1.164,13,0.193,14,0.338,15,0.906,18,0.541,19,0.68,20,1.384,21,2.152,23,1.081,24,0.092,25,0.765,26,0.647,27,2.625,28,2.686,30,1.081,40,1.081,41,1.478,42,2.364,43,1.164,47,0.865,48,0.495,49,0.495,50,0.495,51,0.495,52,0.495,53,0.495,54,1.975,56,1.384,57,0.495,58,0.676,59,0.865,60,0.558,61,0.495,62,0.495,63,0.013,64,0.023,65,0.013,67,0.338,70,1.081,71,1.235,72,1.039,74,0.983,75,0.495,76,1.147,77,1.529,78,1.147,79,1.153,80,1.529,81,2.553,82,1.529,83,1.153,84,1.153,85,1.862,86,1.572,87,1.153,88,1.153,89,1.153,90,2.826,91,1.153,92,1.529,93,1.529,94,1.834,95,1.384,96,1.147,97,1.147,98,1.147,99,0.656,100,1.834,101,1.529,102,0.656,103,0.865,104,1.147,105,1.529,106,1.147,107,1.147,108,1.147,109,0.656,110,1.153,111,1.087,112,0.656,113,1.147,114,2.619,115,1.147,116,0.656,117,2.084,118,1.147,119,1.147,120,0.656,121,0.656,122,0.865,123,0.865,124,2.964,125,0.656,126,0.656,127,0.865,128,0.656,129,0.865,130,0.656,131,1.862,132,0.865,133,1.384,134,0.656,135,0.865,136,0.656,137,0.865,138,0.865,139,0.865,140,1.087,141,0.656,142,0.865,143,0.865,144,0.865,145,0.865,146,0.865,147,0.656,148,0.865,149,1.529,150,0.656,151,0.865,152,0.865,153,0.865,154,0.656,155,0.656,156,0.656,157,0.865,158,0.865,159,2.292,160,0.656,161,2.084,162,0.656,163,0.656,164,0.656,165,1.153,166,0.495,167,0.656,168,1.529,169,2.468,170,2.863,171,1.147,172,1.147,173,1.529,174,1.147,175,0.656,176,0.656,177,2.749,178,0.656,179,0.656,180,0.656,181,0.656,182,0.656,183,0.656,184,2.619,185,0.656,186,0.656,187,1.147,188,0.656,189,0.656,190,1.147,191,2.619,192,0.656,193,0.656,194,0.656,195,0.656,196,1.729,197,1.529,198,1.529,199,1.147,200,0.656,201,1.834,202,0.656,203,1.147,204,1.147,205,0.656,206,0.656,207,0.656,208,0.656,209,0.656,210,0.656,211,1.147,212,1.147,213,0.656,214,0.656,215,1.147,216,0.656,217,0.656,218,0.656,219,1.147,220,0.656,221,0.389,222,0.656,223,0.656,224,0.656,225,0.656,226,0.656,227,0.656,228,0.656,229,0.656,230,0.656,231,0.656,232,0.656,233,0.656,234,0.656,235,0.656,236,0.656]],["title/coverage.html",[237,2.254]],["body/coverage.html",[0,1.339,1,0.661,5,1.098,6,2.207,24,0.087,25,0.661,60,0.661,63,0.06,64,0.073,65,0.06,66,1.339,67,0.863,69,2.115,72,0.863,75,2.207,140,1.734,196,2.905,237,2.207,238,2.207,239,2.926,240,2.926,241,2.926,242,2.926,243,3.569,244,2.926,245,2.926,246,2.207,247,2.207,248,2.926,249,2.926,250,2.926,251,2.926]],["title/miscellaneous/functions.html",[252,1.413,253,2.005]],["body/miscellaneous/functions.html",[13,0.929,15,1.866,23,1.486,24,0.084,26,0.712,58,0.929,63,0.064,64,0.076,65,0.064,110,2.376,246,2.376,247,2.814,252,2.376,253,2.376,254,3.15,255,3.15,256,3.731,257,3.731,258,3.15]],["title/index.html",[13,0.654,259,1.674]],["body/index.html",[2,1.987,24,0.079,63,0.069,64,0.079,65,0.069,68,1.987,259,2.529,260,3.87]],["title/license.html",[261,1.873,262,1.873,263,1.413]],["body/license.html",[24,0.065,63,0.05,64,0.065,65,0.05,111,1.451,238,1.847,263,1.847,264,2.449,265,3.548,266,2.449,267,2.449,268,3.19,269,2.449,270,2.449,271,2.449,272,2.449,273,2.449,274,2.449,275,3.19,276,4.172,277,2.449,278,2.449,279,2.449,280,3.548,281,2.449,282,3.19,283,2.449,284,2.449,285,3.19,286,2.449,287,2.449,288,2.449,289,2.449,290,2.449,291,2.449,292,2.449,293,3.19,294,2.449,295,2.449,296,2.449,297,2.449,298,2.449,299,2.449,300,2.449,301,3.19,302,3.19,303,2.449,304,2.449,305,2.449,306,2.449,307,2.449,308,2.449,309,2.449,310,2.449,311,2.449,312,2.449,313,2.449,314,2.449,315,2.449,316,2.449,317,2.449,318,2.449,319,2.449,320,2.449,321,2.449,322,2.449,323,2.449,324,2.449,325,2.449,326,2.449,327,2.449,328,2.449,329,2.449,330,2.449,331,2.449,332,2.449]],["title/modules.html",[333,2.254]],["body/modules.html",[24,0.08,63,0.07,64,0.08,65,0.07,333,2.573]],["title/additional-documentation/is-badge.html",[1,0.423,334,1.413,335,1.413]],["body/additional-documentation/is-badge.html",[1,0.973,3,0.857,12,1.077,14,0.898,16,3.018,17,2.759,18,1.887,24,0.07,25,0.516,26,0.689,30,1.077,31,1.723,32,1.723,33,1.723,34,1.723,35,1.723,36,1.723,37,1.723,38,1.723,39,1.723,40,1.077,41,1.077,43,1.077,45,1.723,47,1.077,58,0.673,60,0.689,63,0.047,64,0.062,65,0.047,221,1.353,336,1.723,337,1.723,338,2.298,339,2.298,340,2.284,341,2.284,342,3.047,343,3.047,344,3.047,345,3.92,346,3.047,347,3.047,348,3.047,349,3.047,350,4.065,351,3.047,352,3.047,353,3.047,354,3.047,355,1.723,356,2.284,357,2.298,358,1.723,359,1.723,360,1.723,361,1.723,362,1.723]],["title/additional-documentation/is-multiselect.html",[60,0.423,334,1.413,335,1.413]],["body/additional-documentation/is-multiselect.html",[1,0.745,12,1.365,14,0.624,18,0.998,19,1.254,21,1.254,23,0.998,24,0.086,25,0.745,26,0.745,30,1.365,40,1.365,41,0.998,43,1.365,47,1.365,60,0.745,63,0.043,64,0.059,65,0.043,67,0.624,70,1.556,71,1.672,72,0.853,74,1.556,79,2.183,81,3.014,83,1.597,84,1.597,85,2.675,86,2.183,87,2.183,88,1.597,89,2.183,90,3.168,91,1.597,95,1.597,103,2.183,111,1.254,122,1.597,123,1.597,127,1.597,129,1.597,131,2.488,132,1.597,133,2.183,135,1.597,137,1.597,138,1.597,139,1.597,140,1.715,142,1.597,143,1.597,144,1.597,145,1.597,146,1.597,148,1.597,151,1.597,152,1.597,153,1.597,157,1.597,158,2.183,165,2.183,166,1.597,221,1.254,336,1.597,337,1.597,338,2.183,339,1.597,355,1.597,357,2.183,358,1.597,359,1.597,360,1.597,361,1.597,362,1.597,363,2.117,364,2.117,365,2.117]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["0",{"_index":196,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["0/1",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":187,"title":{},"body":{"components/Multiselect.html":{}}}],["12/22",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":260,"title":{},"body":{"index.html":{}}}],["200",{"_index":194,"title":{},"body":{"components/Multiselect.html":{}}}],["2018",{"_index":267,"title":{},"body":{"license.html":{}}}],["3",{"_index":135,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["3/5",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":300,"title":{},"body":{"license.html":{}}}],["action",{"_index":325,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["additional",{"_index":334,"title":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["and/or",{"_index":291,"title":{},"body":{"license.html":{}}}],["arising",{"_index":329,"title":{},"body":{"license.html":{}}}],["associated",{"_index":277,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":337,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["authors",{"_index":318,"title":{},"body":{"license.html":{}}}],["background",{"_index":342,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["badge",{"_index":1,"title":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["badge.scss",{"_index":10,"title":{},"body":{"components/Badge.html":{}}}],["badges",{"_index":157,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["black",{"_index":38,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["border",{"_index":343,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["bottom",{"_index":351,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["built",{"_index":361,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["c",{"_index":266,"title":{},"body":{"license.html":{}}}],["changed",{"_index":152,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["charge",{"_index":272,"title":{},"body":{"license.html":{}}}],["claim",{"_index":321,"title":{},"body":{"license.html":{}}}],["class",{"_index":53,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["click",{"_index":133,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["color",{"_index":16,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["component",{"_index":0,"title":{"components/Badge.html":{},"components/Multiselect.html":{}},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{}}}],["component_template",{"_index":57,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["componentinterface",{"_index":77,"title":{},"body":{"components/Multiselect.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{}}}],["componentwillload",{"_index":94,"title":{},"body":{"components/Multiselect.html":{}}}],["conditions",{"_index":299,"title":{},"body":{"license.html":{}}}],["connection",{"_index":331,"title":{},"body":{"license.html":{}}}],["const",{"_index":173,"title":{},"body":{"components/Multiselect.html":{}}}],["contract",{"_index":326,"title":{},"body":{"license.html":{}}}],["copies",{"_index":293,"title":{},"body":{"license.html":{}}}],["copy",{"_index":275,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":265,"title":{},"body":{"license.html":{}}}],["count",{"_index":165,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["coverage",{"_index":237,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["css",{"_index":340,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["custom",{"_index":341,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["customevent",{"_index":364,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["damages",{"_index":322,"title":{},"body":{"license.html":{}}}],["dark",{"_index":39,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["deal",{"_index":279,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":332,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["default",{"_index":41,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["defined",{"_index":21,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["dependencies",{"_index":355,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["depends",{"_index":365,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["description",{"_index":338,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["disabled",{"_index":79,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["display",{"_index":47,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["distribute",{"_index":289,"title":{},"body":{"license.html":{}}}],["document",{"_index":108,"title":{},"body":{"components/Multiselect.html":{}}}],["documentation",{"_index":238,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["el",{"_index":219,"title":{},"body":{"components/Multiselect.html":{}}}],["element",{"_index":211,"title":{},"body":{"components/Multiselect.html":{}}}],["element.value",{"_index":214,"title":{},"body":{"components/Multiselect.html":{}}}],["elements",{"_index":145,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["emitted",{"_index":151,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["error",{"_index":35,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["event",{"_index":111,"title":{},"body":{"components/Multiselect.html":{},"license.html":{},"additional-documentation/is-multiselect.html":{}}}],["eventemitter",{"_index":149,"title":{},"body":{"components/Multiselect.html":{}}}],["events",{"_index":363,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["export",{"_index":52,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["express",{"_index":309,"title":{},"body":{"license.html":{}}}],["false",{"_index":43,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["family",{"_index":346,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{}}}],["files",{"_index":278,"title":{},"body":{"license.html":{}}}],["fill:#f9f,stroke:#333,stroke",{"_index":359,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["filtereditems",{"_index":180,"title":{},"body":{"components/Multiselect.html":{}}}],["first",{"_index":258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fitness",{"_index":314,"title":{},"body":{"license.html":{}}}],["following",{"_index":298,"title":{},"body":{"license.html":{}}}],["font",{"_index":345,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["format",{"_index":247,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["format(first",{"_index":255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["found",{"_index":236,"title":{},"body":{"components/Multiselect.html":{}}}],["free",{"_index":271,"title":{},"body":{"license.html":{}}}],["function",{"_index":140,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["functions",{"_index":253,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":296,"title":{},"body":{"license.html":{}}}],["getselected",{"_index":95,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["getting",{"_index":261,"title":{"license.html":{}},"body":{}}],["granted",{"_index":270,"title":{},"body":{"license.html":{}}}],["graph",{"_index":357,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["h",{"_index":50,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["handleclick",{"_index":96,"title":{},"body":{"components/Multiselect.html":{}}}],["handleclick(event",{"_index":104,"title":{},"body":{"components/Multiselect.html":{}}}],["height",{"_index":349,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["hereby",{"_index":269,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":138,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["holders",{"_index":319,"title":{},"body":{"license.html":{}}}],["host",{"_index":49,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["htmlinputelement",{"_index":179,"title":{},"body":{"components/Multiselect.html":{}}}],["id",{"_index":73,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{}}}],["identifier",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["ilabelto",{"_index":67,"title":{"interfaces/ILabelTo.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["implements",{"_index":76,"title":{},"body":{"components/Multiselect.html":{}}}],["implied",{"_index":310,"title":{},"body":{"license.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["included",{"_index":303,"title":{},"body":{"license.html":{}}}],["including",{"_index":282,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{}}}],["interact",{"_index":123,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["interface",{"_index":66,"title":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":68,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"index.html":{}}}],["isclickinside",{"_index":174,"title":{},"body":{"components/Multiselect.html":{}}}],["iselectitem",{"_index":72,"title":{"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["isexpanded",{"_index":80,"title":{},"body":{"components/Multiselect.html":{}}}],["isselected",{"_index":200,"title":{},"body":{"components/Multiselect.html":{}}}],["item",{"_index":201,"title":{},"body":{"components/Multiselect.html":{}}}],["item.id",{"_index":204,"title":{},"body":{"components/Multiselect.html":{}}}],["item.name",{"_index":235,"title":{},"body":{"components/Multiselect.html":{}}}],["items",{"_index":81,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["keyword",{"_index":82,"title":{},"body":{"components/Multiselect.html":{}}}],["kind",{"_index":308,"title":{},"body":{"license.html":{}}}],["label",{"_index":131,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelselected",{"_index":83,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelto",{"_index":84,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["last",{"_index":257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["left",{"_index":352,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["liability",{"_index":323,"title":{},"body":{"license.html":{}}}],["liable",{"_index":320,"title":{},"body":{"license.html":{}}}],["license",{"_index":263,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":36,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["limit",{"_index":85,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["limitation",{"_index":283,"title":{},"body":{"license.html":{}}}],["limited",{"_index":311,"title":{},"body":{"license.html":{}}}],["limittext",{"_index":86,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["list",{"_index":127,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["listen",{"_index":164,"title":{},"body":{"components/Multiselect.html":{}}}],["listen('click",{"_index":106,"title":{},"body":{"components/Multiselect.html":{}}}],["make",{"_index":45,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["max",{"_index":87,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["maximum",{"_index":148,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["merchantability",{"_index":313,"title":{},"body":{"license.html":{}}}],["merge",{"_index":287,"title":{},"body":{"license.html":{}}}],["message",{"_index":143,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["metadata",{"_index":7,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["method",{"_index":101,"title":{},"body":{"components/Multiselect.html":{}}}],["methods",{"_index":19,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["middle",{"_index":256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":252,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":264,"title":{},"body":{"license.html":{}}}],["modify",{"_index":286,"title":{},"body":{"license.html":{}}}],["modules",{"_index":333,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":166,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["mouseevent",{"_index":105,"title":{},"body":{"components/Multiselect.html":{}}}],["multiselect",{"_index":60,"title":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["multiselect.scss",{"_index":78,"title":{},"body":{"components/Multiselect.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-badge.html":{}}}],["new",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["newvalue",{"_index":117,"title":{},"body":{"components/Multiselect.html":{}}}],["noninfringement",{"_index":317,"title":{},"body":{"license.html":{}}}],["notice",{"_index":301,"title":{},"body":{"license.html":{}}}],["null",{"_index":159,"title":{},"body":{"components/Multiselect.html":{}}}],["number",{"_index":74,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["obj.id",{"_index":203,"title":{},"body":{"components/Multiselect.html":{}}}],["obj['name'].tolowercase().includes(this.keyword.tolowercase",{"_index":217,"title":{},"body":{"components/Multiselect.html":{}}}],["obtaining",{"_index":274,"title":{},"body":{"license.html":{}}}],["oldvalue",{"_index":114,"title":{},"body":{"components/Multiselect.html":{}}}],["onfiltereditems",{"_index":210,"title":{},"body":{"components/Multiselect.html":{}}}],["onselected",{"_index":88,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["option",{"_index":132,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["optional",{"_index":15,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":30,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["otherwise",{"_index":328,"title":{},"body":{"license.html":{}}}],["out",{"_index":330,"title":{},"body":{"license.html":{}}}],["outside",{"_index":190,"title":{},"body":{"components/Multiselect.html":{}}}],["overview",{"_index":259,"title":{"index.html":{}},"body":{"index.html":{}}}],["padding",{"_index":350,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["page",{"_index":335,"title":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["parameters",{"_index":110,"title":{},"body":{"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":315,"title":{},"body":{"license.html":{}}}],["pass",{"_index":146,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["permission",{"_index":268,"title":{},"body":{"license.html":{}}}],["permit",{"_index":294,"title":{},"body":{"license.html":{}}}],["person",{"_index":273,"title":{},"body":{"license.html":{}}}],["persons",{"_index":295,"title":{},"body":{"license.html":{}}}],["pick",{"_index":153,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder",{"_index":89,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder={this.placeholder",{"_index":224,"title":{},"body":{"components/Multiselect.html":{}}}],["portions",{"_index":305,"title":{},"body":{"license.html":{}}}],["primary",{"_index":31,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["private",{"_index":177,"title":{},"body":{"components/Multiselect.html":{}}}],["process",{"_index":142,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise",{"_index":103,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise.resolve(this.selected",{"_index":167,"title":{},"body":{"components/Multiselect.html":{}}}],["prop",{"_index":28,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["properties",{"_index":14,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["property",{"_index":336,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["provided",{"_index":306,"title":{},"body":{"license.html":{}}}],["publish",{"_index":288,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":316,"title":{},"body":{"license.html":{}}}],["radius",{"_index":344,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["ref={el",{"_index":223,"title":{},"body":{"components/Multiselect.html":{}}}],["remove",{"_index":70,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["remove={this.isselected(item",{"_index":231,"title":{},"body":{"components/Multiselect.html":{}}}],["render",{"_index":20,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["renderselecteditems",{"_index":181,"title":{},"body":{"components/Multiselect.html":{}}}],["rest",{"_index":137,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["restriction",{"_index":281,"title":{},"body":{"license.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["return",{"_index":54,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["returns",{"_index":23,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-multiselect.html":{}}}],["right",{"_index":353,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["rights",{"_index":284,"title":{},"body":{"license.html":{}}}],["rounded",{"_index":17,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["scoped",{"_index":11,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["secondary",{"_index":32,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["select",{"_index":71,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["select={!this.isselected(item",{"_index":233,"title":{},"body":{"components/Multiselect.html":{}}}],["selected",{"_index":90,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["selected={this.isselected(item",{"_index":229,"title":{},"body":{"components/Multiselect.html":{}}}],["selected[this.limit",{"_index":186,"title":{},"body":{"components/Multiselect.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["sell",{"_index":292,"title":{},"body":{"license.html":{}}}],["setitems",{"_index":97,"title":{},"body":{"components/Multiselect.html":{}}}],["setitems(newvalue",{"_index":113,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected",{"_index":98,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected(newvalue",{"_index":118,"title":{},"body":{"components/Multiselect.html":{}}}],["settimeout",{"_index":192,"title":{},"body":{"components/Multiselect.html":{}}}],["shall",{"_index":302,"title":{},"body":{"license.html":{}}}],["show",{"_index":158,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["shown",{"_index":144,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["showselectedbadge",{"_index":91,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["size",{"_index":347,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["software",{"_index":276,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{}}}],["src/.../utils.ts",{"_index":254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components/badge/badge.tsx",{"_index":6,"title":{},"body":{"components/Badge.html":{},"coverage.html":{}}}],["src/components/badge/badge.tsx:12",{"_index":29,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:17",{"_index":46,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:22",{"_index":44,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:24",{"_index":22,"title":{},"body":{"components/Badge.html":{}}}],["src/components/multiselect/multiselect.interface.tsx",{"_index":69,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx",{"_index":75,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx:104",{"_index":120,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:111",{"_index":109,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:204",{"_index":99,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:214",{"_index":112,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:25",{"_index":121,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:30",{"_index":154,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:35",{"_index":126,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:40",{"_index":155,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:45",{"_index":134,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:53",{"_index":136,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:58",{"_index":141,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:63",{"_index":130,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:68",{"_index":156,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:73",{"_index":147,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:75",{"_index":125,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:76",{"_index":128,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:77",{"_index":162,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:78",{"_index":160,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:84",{"_index":102,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:91",{"_index":150,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:94",{"_index":116,"title":{},"body":{"components/Multiselect.html":{}}}],["src/utils/utils.ts",{"_index":246,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":262,"title":{"license.html":{}},"body":{}}],["state",{"_index":124,"title":{},"body":{"components/Multiselect.html":{}}}],["statements",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["stencil/core",{"_index":51,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["stenciljs",{"_index":362,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["string",{"_index":26,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["style",{"_index":221,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["styleurl",{"_index":9,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["subject",{"_index":297,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":290,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":304,"title":{},"body":{"license.html":{}}}],["success",{"_index":33,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["table",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":8,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["tags",{"_index":92,"title":{},"body":{"components/Multiselect.html":{}}}],["target",{"_index":107,"title":{},"body":{"components/Multiselect.html":{}}}],["td",{"_index":358,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["text",{"_index":18,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["textinput",{"_index":178,"title":{},"body":{"components/Multiselect.html":{}}}],["textselected",{"_index":93,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems",{"_index":215,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.length",{"_index":226,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.map((item",{"_index":227,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isexpanded",{"_index":191,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isselected(item",{"_index":206,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items",{"_index":168,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items.filter(obj",{"_index":216,"title":{},"body":{"components/Multiselect.html":{}}}],["this.keyword",{"_index":213,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelselected",{"_index":230,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.remove",{"_index":232,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.select",{"_index":234,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limit",{"_index":185,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limittext(count",{"_index":188,"title":{},"body":{"components/Multiselect.html":{}}}],["this.max",{"_index":208,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect",{"_index":218,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect.contains(event.target",{"_index":175,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onfiltereditems",{"_index":171,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onselected.emit(this.selected",{"_index":209,"title":{},"body":{"components/Multiselect.html":{}}}],["this.placeholder",{"_index":161,"title":{},"body":{"components/Multiselect.html":{}}}],["this.renderselecteditems",{"_index":199,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected",{"_index":170,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.filter(obj",{"_index":207,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.length",{"_index":184,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.map((item",{"_index":182,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.some(obj",{"_index":202,"title":{},"body":{"components/Multiselect.html":{}}}],["this.showselectedbadge",{"_index":197,"title":{},"body":{"components/Multiselect.html":{}}}],["this.tags",{"_index":198,"title":{},"body":{"components/Multiselect.html":{}}}],["this.text",{"_index":55,"title":{},"body":{"components/Badge.html":{}}}],["this.textinput",{"_index":212,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textinput.focus",{"_index":193,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textselected",{"_index":169,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(!this.isexpanded)}>&nbsp",{"_index":225,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(false",{"_index":176,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(true",{"_index":220,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item",{"_index":228,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item)}>x",{"_index":183,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateplaceholder",{"_index":172,"title":{},"body":{"components/Multiselect.html":{}}}],["toggle",{"_index":189,"title":{},"body":{"components/Multiselect.html":{}}}],["top",{"_index":354,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["tort",{"_index":327,"title":{},"body":{"license.html":{}}}],["true",{"_index":12,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["u2713",{"_index":129,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["undefined",{"_index":339,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["updateitems",{"_index":205,"title":{},"body":{"components/Multiselect.html":{}}}],["updateplaceholder",{"_index":195,"title":{},"body":{"components/Multiselect.html":{}}}],["use",{"_index":285,"title":{},"body":{"license.html":{}}}],["used",{"_index":356,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["user",{"_index":122,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["value",{"_index":42,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["var",{"_index":56,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["void",{"_index":100,"title":{},"body":{"components/Multiselect.html":{}}}],["warning",{"_index":34,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["warranties",{"_index":312,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":307,"title":{},"body":{"license.html":{}}}],["watch",{"_index":163,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('items",{"_index":115,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('selected",{"_index":119,"title":{},"body":{"components/Multiselect.html":{}}}],["weight",{"_index":348,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["whether",{"_index":324,"title":{},"body":{"license.html":{}}}],["white",{"_index":37,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["width:4px",{"_index":360,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["within",{"_index":139,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["without",{"_index":280,"title":{},"body":{"license.html":{}}}],["zindex",{"_index":222,"title":{},"body":{"components/Multiselect.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Badge.html":{"url":"components/Badge.html","title":"component - Badge","body":"\n                   \n\n\n\n\n\n  Components\n  Badge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/badge/badge.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-badge\n            \n\n            \n                styleUrl\n                badge.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/badge/badge.tsx:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:22\n                            \n                        \n\n                \n                    \n                        If true, make the badge rounded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:17\n                            \n                        \n\n                \n                    \n                        The text to display in the badge.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-badge',\n  styleUrl: 'badge.scss',\n  scoped: true\n})\nexport class Badge {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * The text to display in the badge.\n   */\n  @Prop() text: string;\n\n  /**\n   * If `true`, make the badge rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  render() {\n    return (\n      \n        {this.text}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Badge'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelTo.html":{"url":"interfaces/ILabelTo.html","title":"interface - ILabelTo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILabelTo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        remove\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectItem.html":{"url":"interfaces/ISelectItem.html","title":"interface - ISelectItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISelectItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Multiselect.html":{"url":"components/Multiselect.html","title":"component - Multiselect","body":"\n                   \n\n\n\n\n\n  Components\n  Multiselect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/multiselect/multiselect.tsx\n\n\n\n\n    \n        Implements\n    \n    \n                ComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-multiselect\n            \n\n            \n                styleUrl\n                multiselect.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isExpanded\n                            \n                            \n                                items\n                            \n                            \n                                keyword\n                            \n                            \n                                labelSelected\n                            \n                            \n                                labelTo\n                            \n                            \n                                limit\n                            \n                            \n                                limitText\n                            \n                            \n                                max\n                            \n                            \n                                onSelected\n                            \n                            \n                                placeholder\n                            \n                            \n                                selected\n                            \n                            \n                                showSelectedBadge\n                            \n                            \n                                tags\n                            \n                            \n                                textSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentWillLoad\n                            \n                            \n                                getSelected\n                            \n                            \n                                handleClick\n                            \n                            \n                                render\n                            \n                            \n                                setItems\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentWillLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentWillLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelected\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelected()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Method()\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:84\n                \n            \n\n\n            \n                \n                    Get the selected items.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Listen('click', {target: 'document'})\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItems\n                        \n                        \n                    \n                \n            \n            \n                \nsetItems(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('items')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelected\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelected(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('selected')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:25\n                            \n                        \n\n                \n                    \n                        If true, the user cannot interact with the select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:35\n                            \n                        \n\n                \n                    \n                        The options list items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u2713'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:63\n                            \n                        \n\n                \n                    \n                        The label when option is selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILabelTo\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  }\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:45\n                            \n                        \n\n                \n                    \n                        The label to remove or select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:53\n                            \n                        \n\n                \n                    \n                        Limit the display of selected options. The rest will be hidden within the limitText string.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:58\n                            \n                        \n\n                \n                    \n                        Function that process the message shown when selected elements pass the defined limit.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:73\n                            \n                        \n\n                \n                    \n                        Maximum selected items can be selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:91\n                            \n                        \n\n                \n                    \n                        Emitted when the selected items has changed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Pick some\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:30\n                            \n                        \n\n                \n                    \n                        The text to display when not selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:40\n                            \n                        \n\n                \n                    \n                        The selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSelectedBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:68\n                            \n                        \n\n                \n                    \n                        If true, The badges will show selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.placeholder\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  Host,\n  Prop,\n  State,\n  Method,\n  Watch,\n  Listen,\n  Event,\n  EventEmitter,\n  h\n} from '@stencil/core';\n\n@Component({\n  tag: 'is-multiselect',\n  styleUrl: 'multiselect.scss',\n  scoped: true\n})\nexport class Multiselect implements ComponentInterface {\n\n  /**\n   * If `true`, the user cannot interact with the select.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * The text to display when not selected items.\n   */\n  @Prop() placeholder: string = \"Pick some\";\n\n  /**\n   * The options list items.\n   */\n  @Prop() items: ISelectItem[] = [];\n\n  /**\n   * The selected items.\n   */\n  @Prop() selected: ISelectItem[] = [];\n\n  /**\n   * The label to remove or select.\n   */\n  @Prop() labelTo: ILabelTo = {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  };\n\n  /**\n   * Limit the display of selected options. The rest will be hidden within the limitText string.\n   */\n  @Prop() limit: number = 3;\n\n  /**\n   * Function that process the message shown when selected elements pass the defined limit.\n   */\n  @Prop() limitText: Function = (count: number) => 'and ' + count + ' more';\n\n  /**\n   * The label when option is selected.\n   */\n  @Prop() labelSelected: string = '\\u2713';\n\n  /**\n   * If `true`, The badges will show selected items.\n   */\n  @Prop() showSelectedBadge: boolean = false;\n\n  /**\n   * Maximum selected items can be selected.\n   */\n  @Prop() max: number;\n\n  @State() isExpanded: boolean = false;\n  @State() keyword: string = '';\n  @State() textSelected: string = this.placeholder;\n  @State() tags = null;\n\n  /**\n   * Get the selected items.\n   */\n  @Method()\n  getSelected(): Promise {\n    return Promise.resolve(this.selected);\n  }\n\n  /**\n   * Emitted when the selected items has changed.\n   */\n  @Event() onSelected: EventEmitter;\n\n  @Watch('items')\n  setItems(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.items = newValue;\n      this.textSelected = this.placeholder;\n      this.selected = [];\n      this.onFilteredItems();\n    }\n  }\n\n  @Watch('selected')\n  setSelected(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.updatePlaceholder();\n    }\n  }\n\n  @Listen('click', {target: 'document'})\n  handleClick(event: MouseEvent) {\n    const isClickInside = this.multiselect.contains(event.target);\n\n    if (!isClickInside) {\n      this.toggle(false, true);\n    }\n  }\n\n  private textInput?: HTMLInputElement;\n  private multiselect?: any;\n  private filteredItems: ISelectItem[] = this.items;\n\n  private renderSelectedItems = () => {\n    let selected = [];\n    if (this.selected) {\n      this.selected.map((item, i) => {\n        if (i \n              \n               this.updateItems(item)}>x\n            \n          );\n        } else {\n          const count = this.selected.length - this.limit;\n          selected[this.limit + 1] = {this.limitText(count)}\n        }\n      });\n    }\n    return selected;\n  };\n\n  private toggle = (state: boolean, outside?: boolean) => {\n    this.isExpanded = state;\n    this.updatePlaceholder();\n    if (!outside) {\n      if (this.isExpanded) {\n        setTimeout(() => {\n          this.textInput.focus();\n        }, 200);\n      }\n    }\n  };\n\n  private updatePlaceholder() {\n    this.textSelected = this.placeholder;\n    if (this.selected && this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n    if (this.isExpanded) {\n      this.textSelected = '';\n    }\n  }\n\n  private isSelected = (item: ISelectItem) => {\n    if (this.selected) {\n      return this.selected.some(obj => obj.id === item.id)\n    }\n    return false;\n  };\n\n  private updateItems = (item: ISelectItem) => {\n    if (this.isSelected(item)) {\n      this.selected = this.selected.filter(obj => {\n        return obj.id !== item.id;\n      });\n    } else {\n      if (this.selected.length !== this.max) {\n        if (this.selected && this.selected.length > 0) {\n          this.selected = [...this.selected, item];\n        } else {\n          this.selected = [item];\n        }\n      }\n    }\n    this.onSelected.emit(this.selected);\n  };\n\n  private onFilteredItems = () => {\n    const element = this.textInput;\n    if (element) {\n      this.keyword = element.value;\n      this.filteredItems = this.items.filter(obj => {\n        return obj['name'].toLowerCase().includes(this.keyword.toLowerCase());\n      });\n    } else {\n      this.filteredItems = this.items;\n    }\n  };\n\n  componentWillLoad() {\n    this.textSelected = this.placeholder;\n    if (this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n  }\n\n  render() {\n    return (\n       this.multiselect = el}>\n        \n\n           this.toggle(true)} style={{\n            zIndex: this.isExpanded ? '-1' : '0'\n          }}>\n          \n\n          \n            {this.showSelectedBadge && this.selected && this.selected.length > 0 ? this.tags : this.textSelected}\n          \n\n          {this.isExpanded &&\n          \n               this.onFilteredItems()}\n                  ref={el => this.textInput = el}\n                  placeholder={this.placeholder}\n              />\n          \n          }\n           this.toggle(!this.isExpanded)}>&nbsp;\n        \n        {\n          this.isExpanded &&\n          \n              \n                {\n                  this.filteredItems.length > 0 ? this.filteredItems.map((item: ISelectItem, i) => {\n                    return (\n                       this.updateItems(item)}\n                          label-selected={this.isSelected(item) ? this.labelSelected : null}\n                          label-to-remove={this.isSelected(item) ? this.labelTo.remove : null}\n                          label-to-select={!this.isSelected(item) ? this.labelTo.select : null}\n                      >{item.name}\n                    )\n                  }) : Not found\n                }\n              \n          \n        }\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Multiselect'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/badge/badge.tsx\n            \n            component\n            Badge\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ILabelTo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ISelectItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.tsx\n            \n            component\n            Multiselect\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/utils/utils.ts\n            \n            function\n            format\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            format   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(first, middle, last)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    middle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    last\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-badge.html":{"url":"additional-documentation/is-badge.html","title":"additional-page - is-badge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-badge\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the badge rounded.\nboolean\nfalse\n\n\ntext\ntext\nThe text to display in the badge.\nstring\nundefined\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the badge\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the badge\n\n\n--font-family\nFont family of the badge text\n\n\n--font-size\nFont size of the badge text\n\n\n--font-weight\nFont weight of the badge text\n\n\n--height\nHeight of the badge\n\n\n--padding-bottom\nPadding bottom of the badge\n\n\n--padding-left\nPadding left of the badge\n\n\n--padding-right\nPadding right of the badge\n\n\n--padding-top\nPadding top of the badge\n\n\n\nDependencies\nUsed by\n\nis-multiselect\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-badge fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-multiselect.html":{"url":"additional-documentation/is-multiselect.html","title":"additional-page - is-multiselect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-multiselect\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ndisabled\ndisabled\nIf true, the user cannot interact with the select.\nboolean\nfalse\n\n\nitems\n--\nThe options list items.\nISelectItem[]\n[]\n\n\nlabelSelected\nlabel-selected\nThe label when option is selected.\nstring\n'\\u2713'\n\n\nlabelTo\n--\nThe label to remove or select.\nILabelTo\n{     remove: 'Click to Remove',     select: 'Click to Select'   }\n\n\nlimit\nlimit\nLimit the display of selected options. The rest will be hidden within the limitText string.\nnumber\n3\n\n\nlimitText\n--\nFunction that process the message shown when selected elements pass the defined limit.\nFunction\n(count: number) => 'and ' + count + ' more'\n\n\nmax\nmax\nMaximum selected items can be selected.\nnumber\nundefined\n\n\nplaceholder\nplaceholder\nThe text to display when not selected items.\nstring\n\"Pick some\"\n\n\nselected\n--\nThe selected items.\nISelectItem[]\n[]\n\n\nshowSelectedBadge\nshow-selected-badge\nIf true, The badges will show selected items.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nonSelected\nEmitted when the selected items has changed.\nCustomEvent\n\n\n\nMethods\ngetSelected() => Promise\nGet the selected items.\nReturns\nType: Promise\nDependencies\nDepends on\n\nis-badge\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-multiselect fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
